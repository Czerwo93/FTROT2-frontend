[{"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\index.js":"1","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\App.js":"2","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Header\\Header.js":"3","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Home\\Home.js":"4","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\TechnicalProjectManagerBoard.js":"5","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Sidebar\\Sidebar.js":"6","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Engineer\\EngineerBoard.js":"7","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Engineer\\engineerSidebarActions.js":"8","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\technicalProjectManagerSidebarActions.js":"9","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\Workpackages\\Workpackages.js":"10","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\Workpackages\\Workpackage\\Workpackage.js":"11","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\LeadEngineerBoard.js":"12","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\leadEngineerSidebarActions.js":"13","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TeamLeader\\TeamLeaderBoard.js":"14","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TeamLeader\\teamLeaderSidebarActions.js":"15","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackages.js":"16","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Workpackage.js":"17","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TeamLeader\\AssignTasks\\AssignTasks.js":"18","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Tasks.js":"19","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\Task.js":"20","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskEdit\\TaskEdit.js":"21","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\TaskAdd\\TaskAdd.js":"22","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskDetails\\TaskDetails.js":"23"},{"size":219,"mtime":1609936452371,"results":"24","hashOfConfig":"25"},{"size":4449,"mtime":1610880165480,"results":"26","hashOfConfig":"25"},{"size":3474,"mtime":1610824382517,"results":"27","hashOfConfig":"25"},{"size":1705,"mtime":1610043294993,"results":"28","hashOfConfig":"25"},{"size":3571,"mtime":1610822180749,"results":"29","hashOfConfig":"25"},{"size":1290,"mtime":1610193440780,"results":"30","hashOfConfig":"25"},{"size":2865,"mtime":1610793823155,"results":"31","hashOfConfig":"25"},{"size":232,"mtime":1610831583293,"results":"32","hashOfConfig":"25"},{"size":376,"mtime":1610209376244,"results":"33","hashOfConfig":"25"},{"size":9225,"mtime":1611515692882,"results":"34","hashOfConfig":"25"},{"size":5517,"mtime":1611515508259,"results":"35","hashOfConfig":"25"},{"size":3525,"mtime":1610823409916,"results":"36","hashOfConfig":"25"},{"size":330,"mtime":1610823870134,"results":"37","hashOfConfig":"25"},{"size":3519,"mtime":1610825163764,"results":"38","hashOfConfig":"25"},{"size":611,"mtime":1610880379523,"results":"39","hashOfConfig":"25"},{"size":2819,"mtime":1611516867581,"results":"40","hashOfConfig":"25"},{"size":4043,"mtime":1611610746260,"results":"41","hashOfConfig":"25"},{"size":16013,"mtime":1611404137447,"results":"42","hashOfConfig":"25"},{"size":1578,"mtime":1611609010610,"results":"43","hashOfConfig":"25"},{"size":2420,"mtime":1611611785116,"results":"44","hashOfConfig":"25"},{"size":3077,"mtime":1611609050570,"results":"45","hashOfConfig":"25"},{"size":3044,"mtime":1611610021100,"results":"46","hashOfConfig":"25"},{"size":818,"mtime":1611611761162,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"wgp0dp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\index.js",[],["104","105"],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\App.js",["106","107","108"],"import { Drawer, IconButton, List } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport EngineerBoard from \"./components/Engineer/EngineerBoard\";\nimport Header from \"./components/Header/Header\";\nimport Home from \"./components/Home/Home\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport engineerSidebarActions from \"./components/Engineer/engineerSidebarActions\";\nimport technicalProjectManagerSidebarActions from \"./components/TechnicalProjectManager/technicalProjectManagerSidebarActions\";\nimport TechnicalProjectManagerBoard from \"./components/TechnicalProjectManager/TechnicalProjectManagerBoard\";\nimport Workpackages from \"./components/TechnicalProjectManager/Workpackages/Workpackages\";\nimport LeadEngineerBoard from \"./components/LeadEngineer/LeadEngineerBoard\";\nimport LeadEngineerWorkpackages from \"./components/LeadEngineer/Workpackages/Workpackages\";\nimport leadEngineerSidebarActions from \"./components/LeadEngineer/leadEngineerSidebarActions\";\nimport TeamLeaderBoard from \"./components/TeamLeader/TeamLeaderBoard\";\nimport teamLeaderSidebarActions from \"./components/TeamLeader/teamLeaderSidebarActions\";\nimport AssignTasks from \"./components/TeamLeader/AssignTasks/AssignTasks\";\n\nfunction App() {\n  const [isLogged, setIsLogged] = useState(true);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  const handleLogOut = () => {\n    setIsLogged(!isLogged);\n  };\n\n  const handleSidebarOpen = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const handleSidebarClose = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  return (\n    <div className=\"app\">\n      <Router>\n        {isLogged && (\n          <Header\n            handleDrawerOpen={handleSidebarOpen}\n            handleLogOut={handleLogOut}\n            isDrawerOpen={isSidebarOpen}\n          />\n        )}\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Sidebar\n                isSidebarOpen={isSidebarOpen}\n                handleSidebarClose={handleSidebarClose}\n                actions={engineerSidebarActions}\n              ></Sidebar>\n            )}\n          ></Route>\n          <Route\n            path=\"/technical-project-manager/\"\n            render={() => (\n              <Sidebar\n                isSidebarOpen={isSidebarOpen}\n                handleSidebarClose={handleSidebarClose}\n                actions={technicalProjectManagerSidebarActions}\n              ></Sidebar>\n            )}\n          ></Route>\n          <Route\n            path=\"/lead-engineer/\"\n            render={() => (\n              <Sidebar\n                isSidebarOpen={isSidebarOpen}\n                handleSidebarClose={handleSidebarClose}\n                actions={leadEngineerSidebarActions}\n              ></Sidebar>\n            )}\n          ></Route>\n          <Route\n            path=\"/team-leader/\"\n            render={() => (\n              <Sidebar\n                isSidebarOpen={isSidebarOpen}\n                handleSidebarClose={handleSidebarClose}\n                actions={teamLeaderSidebarActions}\n              ></Sidebar>\n            )}\n          ></Route>\n        </Switch>\n\n        <div className=\"app__body\">\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              component={isLogged ? EngineerBoard : Home}\n            ></Route>\n            <Route\n              path=\"/technical-project-manager/board\"\n              exact\n              component={TechnicalProjectManagerBoard}\n            ></Route>\n            <Route\n              path=\"/technical-project-manager/workpackages\"\n              exact\n              component={Workpackages}\n            ></Route>\n            <Route\n              path=\"/lead-engineer/board\"\n              exact\n              component={LeadEngineerBoard}\n            ></Route>\n            <Route\n              path=\"/lead-engineer/workpackages\"\n              exact\n              component={LeadEngineerWorkpackages}\n            ></Route>\n            <Route\n              path=\"/team-leader/board\"\n              exact\n              component={TeamLeaderBoard}\n            ></Route>\n            <Route\n              path=\"/team-leader/assign-tasks\"\n              exact\n              component={AssignTasks}\n            ></Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Header\\Header.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Home\\Home.js",["109","110"],"import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Home.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <form noValidate autoComplete=\"off\" className=\"home__form\">\r\n        <div>\r\n          <TextField\r\n            error\r\n            id=\"standard-error\"\r\n            label=\"Error\"\r\n            defaultValue=\"Hello World\"\r\n          />\r\n          <TextField\r\n            error\r\n            id=\"standard-error-helper-text\"\r\n            label=\"Error\"\r\n            defaultValue=\"Hello World\"\r\n            helperText=\"Incorrect entry.\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            error\r\n            id=\"filled-error\"\r\n            label=\"Error\"\r\n            defaultValue=\"Hello World\"\r\n            variant=\"filled\"\r\n          />\r\n          <TextField\r\n            error\r\n            id=\"filled-error-helper-text\"\r\n            label=\"Error\"\r\n            defaultValue=\"Hello World\"\r\n            helperText=\"Incorrect entry.\"\r\n            variant=\"filled\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            error\r\n            id=\"outlined-error\"\r\n            label=\"Error\"\r\n            defaultValue=\"Hello World\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error\r\n            id=\"outlined-error-helper-text\"\r\n            label=\"Error\"\r\n            defaultValue=\"Hello World\"\r\n            helperText=\"Incorrect entry.\"\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\TechnicalProjectManagerBoard.js",["111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TechnicalProjectManagerBoard.css\";\r\nimport moment from \"moment\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst userInfo = {\r\n  name: \"Maciej\",\r\n  surname: \"Pszczoła\",\r\n  picture:\r\n    \"https://yt3.ggpht.com/yti/ANoDKi6wK_UXTj-paYQq980Ia30B623dBP5hTFc9Fnsciw=s88-c-k-c0x00ffffff-no-rj-mo\",\r\n  role: \"Technical Project Manager\",\r\n  team: \"DLSC2\",\r\n  supervisor: \"Łukasz Biernatowski\",\r\n  joinedAt: moment(Date.now()).calendar(),\r\n  workPackages: [\r\n    { name: \"HMC\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    { name: \"BMC\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    {\r\n      name: \"Volvo\",\r\n      tasksStatus: 0.5,\r\n      dueTo: moment(Date.now()).calendar(),\r\n    },\r\n    { name: \"Daf\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    {\r\n      name: \"Iveco\",\r\n      tasksStatus: 0.5,\r\n      dueTo: moment(Date.now()).calendar(),\r\n    },\r\n  ],\r\n};\r\nconst TechnicalProjectManagerBoard = () => {\r\n  const [userDetails, setUserDetails] = useState(userInfo);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board__container\">\r\n        <div className=\"board__title\">\r\n          <h2>Technical Project Manager Dashboard</h2>\r\n        </div>\r\n\r\n        <div className=\"board__info\">\r\n          <h3>User Details</h3>\r\n          <div className=\"board__details\">\r\n            <div className=\"board__column\">\r\n              <img src={userDetails.picture} alt=\"User\"></img>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Name:</b> {userDetails.name}\r\n              </p>\r\n              <p>\r\n                <b>Surname:</b> {userDetails.surname}\r\n              </p>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Joined at:</b> {userDetails.joinedAt}\r\n              </p>\r\n              <p>\r\n                <b>Role:</b> {userDetails.role}\r\n              </p>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Team:</b> {userDetails.team}\r\n              </p>\r\n              <p>\r\n                <b>Supervisor:</b> {userDetails.supervisor}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"board__statistics\">\r\n          <ul className=\"board__workPackages\">\r\n            {userDetails.workPackages.map((workPackage) => (\r\n              <li className=\"board__workPackage\">\r\n                <div className=\"board__status\" style={{ width: \"50%\" }}></div>\r\n                <p className=\"board__description\">\r\n                  {`Name:\r\n              ${workPackage.name} Status: ${\r\n                    workPackage.tasksStatus * 100\r\n                  }% Due to: \r\n              ${workPackage.dueTo}`}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"board__graph\">\r\n            <Doughnut\r\n              data={{\r\n                labels: [\"Done\", \"In progress\", \"Deleyed\"],\r\n                datasets: [\r\n                  {\r\n                    data: [90, 32, 30],\r\n                    backgroundColor: [\"green\", \"orange\", \"gray\"],\r\n                  },\r\n                ],\r\n              }}\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              options={{ maintainAspectRatio: false, fontColor: \"black\" }}\r\n            ></Doughnut>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechnicalProjectManagerBoard;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Sidebar\\Sidebar.js",["113","114"],"import { Divider, Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = ({ isSidebarOpen, handleSidebarClose, actions }) => {\r\n  return (\r\n    <Drawer anchor=\"left\" open={isSidebarOpen} variant=\"persistent\">\r\n      <div>\r\n        <IconButton onClick={handleSidebarClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {actions.map((action, index) => {\r\n          return (\r\n            <ListItem\r\n              component={Link}\r\n              to={action.link}\r\n              button\r\n              key={action.name}\r\n            >\r\n              <ListItemIcon>\r\n                <action.icon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={action.name} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Engineer\\EngineerBoard.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\Engineer\\engineerSidebarActions.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\technicalProjectManagerSidebarActions.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\Workpackages\\Workpackages.js",["115"],"import {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  TextareaAutosize,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Workpackage from \"./Workpackage/Workpackage\";\r\nimport \"./Workpackages.css\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport moment from \"moment\";\r\n\r\nconst validationSchema = yup.object({\r\n  // email: yup\r\n  //   .string(\"Enter your email\")\r\n  //   .email(\"Enter a valid email\")\r\n  //   .required(\"Email is required\"),\r\n  // password: yup\r\n  //   .string(\"Enter your password\")\r\n  //   .min(8, \"Password should be of minimum 8 characters length\")\r\n  //   .required(\"Password is required\"),\r\n  name: yup\r\n    .string(\"Enter your name\")\r\n    .min(5, \"Name should be of minimum 5 characters length\")\r\n    .required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter workpackage description\")\r\n    .min(10, \"Description should be of minimum 10 characters length\")\r\n    .required(\"Description is required\"),\r\n  leadEngineer: yup\r\n    .string(\"Enter lead engineer name\")\r\n    .required(\"Lead engineer is required\"),\r\n});\r\n\r\nconst leadEngineers = [\r\n  \"Mateusz Czerwiński\",\r\n  \"Bartosz Kozłowski\",\r\n  \"Adam Małysz\",\r\n  \"Kamil Nowak\",\r\n  \"Jan Kowalski\",\r\n];\r\n\r\nconst Workpackages = () => {\r\n  const [workpackages, setWorkpackages] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      // // email: \"foobar@example.com\",\r\n      // // password: \"foobar\",\r\n      // age: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      setWorkpackages([...workpackages, values]);\r\n      handleClose();\r\n    },\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleWorkpackageDelete = (id) => {\r\n    setWorkpackages(workpackages.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleWorkpackageEdit = (id, workpackage) => {\r\n    setWorkpackages(\r\n      workpackages.map((item) => {\r\n        if (item.id === id) return workpackage;\r\n        else return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialState = [\r\n      {\r\n        id: 1,\r\n        name: \"HMC\",\r\n        tasksQuantity: 5,\r\n        finishedTasks: 3,\r\n        endDate: moment(Date.now()).calendar(),\r\n        predictedFinish: moment(Date.now()).calendar(),\r\n        description:\r\n          \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus eveniet, reprehenderit amet sint possimus est? Tempora doloribus quis nam quos ut iste, obcaecati sed eaque odit! Perspiciatis sapiente recusandae illo.\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Volvo\",\r\n        tasksQuantity: 5,\r\n        finishedTasks: 3,\r\n        endDate: moment(Date.now()).calendar(),\r\n        predictedFinish: moment(Date.now()).calendar(),\r\n        description:\r\n          \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus eveniet, reprehenderit amet sint possimus est? Tempora doloribus quis nam quos ut iste, obcaecati sed eaque odit! Perspiciatis sapiente recusandae illo.\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"BMC\",\r\n        tasksQuantity: 5,\r\n        finishedTasks: 3,\r\n        endDate: moment(Date.now()).calendar(),\r\n        predictedFinish: moment(Date.now()).calendar(),\r\n        description:\r\n          \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Doloribus eveniet, reprehenderit amet sint possimus est? Tempora doloribus quis nam quos ut iste, obcaecati sed eaque odit! Perspiciatis sapiente recusandae illo.\",\r\n      },\r\n    ];\r\n    setWorkpackages(initialState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tpjm workpackages\">\r\n      <div className=\"tpjm workpackages__container\">\r\n        <div className=\"tpjm workpackages__header\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleClickOpen}\r\n          >\r\n            Add new Workpackage\r\n          </Button>\r\n          <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            disableBackdropClick\r\n            open={open}\r\n          >\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                Modal title\r\n              </DialogTitle>\r\n              <DialogContent dividers>\r\n                {/* <TextField\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.password && Boolean(formik.errors.password)\r\n                  }\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                /> */}\r\n\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  label=\"name\"\r\n                  type=\"text\"\r\n                  value={formik.values.name}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.name && Boolean(formik.errors.name)}\r\n                  helperText={formik.touched.name && formik.errors.name}\r\n                />\r\n\r\n                <TextField\r\n                  fullWidth\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  label=\"description\"\r\n                  type=\"textarea\"\r\n                  multiline\r\n                  rows={2}\r\n                  value={formik.values.description}\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.description &&\r\n                    Boolean(formik.errors.description)\r\n                  }\r\n                  helperText={\r\n                    formik.touched.description && formik.errors.description\r\n                  }\r\n                />\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"lead-engineer\">Lead Engineer</InputLabel>\r\n                  <Select\r\n                    labelId=\"lead-engineer\"\r\n                    label=\"leadEngineer\"\r\n                    name=\"leadEngineer\"\r\n                    value={formik.values.leadEngineer}\r\n                    fullWidth\r\n                    onChange={formik.handleChange}\r\n                  >\r\n                    {leadEngineers.map((leadEngineer) => {\r\n                      return (\r\n                        <MenuItem value={leadEngineer}>{leadEngineer}</MenuItem>\r\n                      );\r\n                    })}\r\n                    {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n                  </Select>\r\n                  {formik.touched.leadEngineer &&\r\n                    Boolean(formik.errors.leadEngineer) && (\r\n                      <FormHelperText>\r\n                        {formik.touched.leadEngineer}\r\n                      </FormHelperText>\r\n                    )}\r\n                </FormControl>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button autoFocus type=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </Dialog>\r\n          <div className=\" tpjm workpackages__titleContainer\">\r\n            <h2>Workpackages</h2>\r\n          </div>\r\n        </div>\r\n        {workpackages.map((workpackage) => (\r\n          <Workpackage\r\n            id={workpackage.id}\r\n            name={workpackage.name}\r\n            tasksQuantity={workpackage.tasksQuantity}\r\n            finishedTasks={workpackage.finishedTasks}\r\n            endDate={workpackage.endDate}\r\n            predictedFinish={workpackage.predictedFinish}\r\n            description={workpackage.description}\r\n            handleWorkpackageDelete={handleWorkpackageDelete}\r\n            handleWorkpackageEdit={handleWorkpackageEdit}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workpackages;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TechnicalProjectManager\\Workpackages\\Workpackage\\Workpackage.js",["116"],"import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Workpackage.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst validationSchema = yup.object({\r\n  // email: yup\r\n  //   .string(\"Enter your email\")\r\n  //   .email(\"Enter a valid email\")\r\n  //   .required(\"Email is required\"),\r\n  // password: yup\r\n  //   .string(\"Enter your password\")\r\n  //   .min(8, \"Password should be of minimum 8 characters length\")\r\n  //   .required(\"Password is required\"),\r\n  name: yup\r\n    .string(\"Enter your name\")\r\n    .min(5, \"Name should be of minimum 5 characters length\")\r\n    .required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter workpackage description\")\r\n    .min(10, \"Description should be of minimum 10 characters length\")\r\n    .required(\"Description is required\"),\r\n});\r\nconst Workpackage = ({\r\n  id,\r\n  name,\r\n  tasksQuantity,\r\n  finishedTasks,\r\n  endDate,\r\n  predictedFinish,\r\n  description,\r\n  handleWorkpackageDelete,\r\n  handleWorkpackageEdit,\r\n}) => {\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setIsEditOpen(true);\r\n  };\r\n  const handleEditClose = () => {\r\n    setIsEditOpen(false);\r\n  };\r\n\r\n  const handleDetailsOpen = () => {\r\n    setIsDetailsOpen(true);\r\n  };\r\n\r\n  const handleDetailsClose = () => {\r\n    setIsDetailsOpen(false);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      // email: \"foobar@example.com\",\r\n      // password: \"foobar\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      // console.log(...workpackages);\r\n      handleEditClose();\r\n      handleWorkpackageEdit(id, values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"tpjm workpackage\">\r\n      <div className=\"tpjm workpackage__details\">\r\n        <h3>Name: {name}</h3>\r\n        <h4>Id: {id}</h4>\r\n        <h4>Tasks quantity: {tasksQuantity}</h4>\r\n        <h4>finished tasks: {finishedTasks}</h4>\r\n        <h4>Due to: {endDate}</h4>\r\n        <h4>Predicted due to: {predictedFinish}</h4>\r\n      </div>\r\n      <div className=\"tpjm workpackage__description\">\r\n        <h3>Description:</h3>\r\n        <p>{description}</p>\r\n      </div>\r\n      <div className=\"tpjm workpackage__actions\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleDetailsOpen}>\r\n          Details\r\n        </Button>\r\n        <Dialog\r\n          onClose={handleEditClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          disableBackdropClick\r\n          open={isDetailsOpen}\r\n        >\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={handleDetailsClose}\r\n          >\r\n            Tasks Status\r\n          </DialogTitle>\r\n          <DialogContent dividers></DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDetailsClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Button variant=\"contained\" onClick={handleEditOpen}>\r\n          Edit\r\n        </Button>\r\n        <Dialog\r\n          onClose={handleEditClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          disableBackdropClick\r\n          open={isEditOpen}\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleEditClose}>\r\n              Modal title\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n              <TextField\r\n                fullWidth\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"name\"\r\n                type=\"text\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                helperText={formik.touched.name && formik.errors.name}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"description\"\r\n                type=\"textarea\"\r\n                multiline\r\n                rows={2}\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.description &&\r\n                  Boolean(formik.errors.description)\r\n                }\r\n                helperText={\r\n                  formik.touched.description && formik.errors.description\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleEditClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button autoFocus type=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n          )}\r\n        </Dialog>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => handleWorkpackageDelete(id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workpackage;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\LeadEngineerBoard.js",["117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./LeadEngineerBoard.css\";\r\nimport moment from \"moment\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst userInfo = {\r\n  name: \"Mateusz\",\r\n  surname: \"Czerwiński\",\r\n  picture:\r\n    \"https://yt3.ggpht.com/yti/ANoDKi6wK_UXTj-paYQq980Ia30B623dBP5hTFc9Fnsciw=s88-c-k-c0x00ffffff-no-rj-mo\",\r\n  role: \"Lead engineer\",\r\n  team: \"DLSC2\",\r\n  supervisor: \"Wojciech Zabiegło\",\r\n  joinedAt: moment(Date.now()).calendar(),\r\n  workPackages: [\r\n    { name: \"HMC\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    { name: \"BMC\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    {\r\n      name: \"Volvo\",\r\n      tasksStatus: 0.5,\r\n      dueTo: moment(Date.now()).calendar(),\r\n    },\r\n    { name: \"Daf\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    {\r\n      name: \"Iveco\",\r\n      tasksStatus: 0.5,\r\n      dueTo: moment(Date.now()).calendar(),\r\n    },\r\n  ],\r\n};\r\n\r\nconst LeadEngineerBoard = () => {\r\n  const [userDetails, setUserDetails] = useState(userInfo);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board__container\">\r\n        <div className=\"board__title\">\r\n          <h2>Technical Project Manager Dashboard</h2>\r\n        </div>\r\n\r\n        <div className=\"board__info\">\r\n          <h3>User Details</h3>\r\n          <div className=\"board__details\">\r\n            <div className=\"board__column\">\r\n              <img src={userDetails.picture} alt=\"User\"></img>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Name:</b> {userDetails.name}\r\n              </p>\r\n              <p>\r\n                <b>Surname:</b> {userDetails.surname}\r\n              </p>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Joined at:</b> {userDetails.joinedAt}\r\n              </p>\r\n              <p>\r\n                <b>Role:</b> {userDetails.role}\r\n              </p>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Team:</b> {userDetails.team}\r\n              </p>\r\n              <p>\r\n                <b>Supervisor:</b> {userDetails.supervisor}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"board__statistics\">\r\n          <ul className=\"board__workPackages\">\r\n            {userDetails.workPackages.map((workPackage) => (\r\n              <li className=\"board__workPackage\">\r\n                <div className=\"board__status\" style={{ width: \"50%\" }}></div>\r\n                <p className=\"board__description\">\r\n                  {`Name:\r\n            ${workPackage.name} Status: ${\r\n                    workPackage.tasksStatus * 100\r\n                  }% Due to: \r\n            ${workPackage.dueTo}`}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"board__graph\">\r\n            <Doughnut\r\n              data={{\r\n                labels: [\"Done\", \"In progress\", \"Deleyed\"],\r\n                datasets: [\r\n                  {\r\n                    data: [90, 32, 30],\r\n                    backgroundColor: [\"green\", \"orange\", \"gray\"],\r\n                  },\r\n                ],\r\n              }}\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              options={{ maintainAspectRatio: false, fontColor: \"black\" }}\r\n            ></Doughnut>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadEngineerBoard;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\leadEngineerSidebarActions.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TeamLeader\\TeamLeaderBoard.js",["119","120"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TeamLeaderBoard.css\";\r\nimport moment from \"moment\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst userInfo = {\r\n  name: \"Mateusz\",\r\n  surname: \"Czerwiński\",\r\n  picture:\r\n    \"https://yt3.ggpht.com/yti/ANoDKi6wK_UXTj-paYQq980Ia30B623dBP5hTFc9Fnsciw=s88-c-k-c0x00ffffff-no-rj-mo\",\r\n  role: \"Lead engineer\",\r\n  team: \"DLSC2\",\r\n  supervisor: \"Wojciech Zabiegło\",\r\n  joinedAt: moment(Date.now()).calendar(),\r\n  workPackages: [\r\n    { name: \"HMC\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    { name: \"BMC\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    {\r\n      name: \"Volvo\",\r\n      tasksStatus: 0.5,\r\n      dueTo: moment(Date.now()).calendar(),\r\n    },\r\n    { name: \"Daf\", tasksStatus: 0.5, dueTo: moment(Date.now()).calendar() },\r\n    {\r\n      name: \"Iveco\",\r\n      tasksStatus: 0.5,\r\n      dueTo: moment(Date.now()).calendar(),\r\n    },\r\n  ],\r\n};\r\n\r\nconst TeamLeaderBoard = () => {\r\n  const [userDetails, setUserDetails] = useState(userInfo);\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board__container\">\r\n        <div className=\"board__title\">\r\n          <h2>Technical Project Manager Dashboard</h2>\r\n        </div>\r\n\r\n        <div className=\"board__info\">\r\n          <h3>User Details</h3>\r\n          <div className=\"board__details\">\r\n            <div className=\"board__column\">\r\n              <img src={userDetails.picture} alt=\"User\"></img>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Name:</b> {userDetails.name}\r\n              </p>\r\n              <p>\r\n                <b>Surname:</b> {userDetails.surname}\r\n              </p>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Joined at:</b> {userDetails.joinedAt}\r\n              </p>\r\n              <p>\r\n                <b>Role:</b> {userDetails.role}\r\n              </p>\r\n            </div>\r\n            <div className=\"board__column\">\r\n              <p>\r\n                <b>Team:</b> {userDetails.team}\r\n              </p>\r\n              <p>\r\n                <b>Supervisor:</b> {userDetails.supervisor}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"board__statistics\">\r\n          <ul className=\"board__workPackages\">\r\n            {userDetails.workPackages.map((workPackage) => (\r\n              <li className=\"board__workPackage\">\r\n                <div className=\"board__status\" style={{ width: \"50%\" }}></div>\r\n                <p className=\"board__description\">\r\n                  {`Name:\r\n            ${workPackage.name} Status: ${\r\n                    workPackage.tasksStatus * 100\r\n                  }% Due to: \r\n            ${workPackage.dueTo}`}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"board__graph\">\r\n            <Doughnut\r\n              data={{\r\n                labels: [\"Done\", \"In progress\", \"Deleyed\"],\r\n                datasets: [\r\n                  {\r\n                    data: [90, 32, 30],\r\n                    backgroundColor: [\"green\", \"orange\", \"gray\"],\r\n                  },\r\n                ],\r\n              }}\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              options={{ maintainAspectRatio: false, fontColor: \"black\" }}\r\n            ></Doughnut>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamLeaderBoard;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TeamLeader\\teamLeaderSidebarActions.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackages.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Workpackage.js",["121","122","123","124","125","126","127","128"],"import { Button, TextField, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Workpackage.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport Tasks from \"./Tasks/Tasks\";\r\nimport { uuid } from \"uuidv4\";\r\nimport TaskAdd from \"./TaskAdd/TaskAdd\";\r\n\r\nconst validationSchema = yup.object({\r\n  // email: yup\r\n  //   .string(\"Enter your email\")\r\n  //   .email(\"Enter a valid email\")\r\n  //   .required(\"Email is required\"),\r\n  // password: yup\r\n  //   .string(\"Enter your password\")\r\n  //   .min(8, \"Password should be of minimum 8 characters length\")\r\n  //   .required(\"Password is required\"),\r\n  name: yup\r\n    .string(\"Enter your name\")\r\n    .min(5, \"Name should be of minimum 5 characters length\")\r\n    .required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter workpackage description\")\r\n    .min(10, \"Description should be of minimum 10 characters length\")\r\n    .required(\"Description is required\"),\r\n});\r\n\r\nconst initialState = [\r\n  {\r\n    id: uuid(),\r\n    name: \"CAD model of pedal\",\r\n    duration: 2,\r\n    status: 0.5,\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"FEM of housing\",\r\n    duration: 2,\r\n    status: 0.5,\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"DFMEA\",\r\n    duration: 2,\r\n    status: 0.5,\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Design review\",\r\n    duration: 10,\r\n    status: 0.5,\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: \"Meeting with supplier\",\r\n    duration: 2,\r\n    status: 0.5,\r\n  },\r\n];\r\n\r\nconst Workpackage = ({\r\n  id,\r\n  name,\r\n  tasksQuantity,\r\n  finishedTasks,\r\n  pid,\r\n  endDate,\r\n  predictedFinish,\r\n  description,\r\n  handleWorkpackageDelete,\r\n  handleWorkpackageEdit,\r\n}) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isTaskAddOpen, setIsTaskAddOpen] = useState(false);\r\n\r\n  const handleTaskAddOpen = () => {\r\n    setIsTaskAddOpen(true);\r\n  };\r\n  const handleTaskAddClose = () => {\r\n    setIsTaskAddOpen(false);\r\n  };\r\n\r\n  const handleTaskAdd = (values) => {\r\n    const taskAdded = Object.assign({}, { id: uuid() }, values);\r\n    setTasks([...tasks, taskAdded]);\r\n  };\r\n\r\n  const handleTaskDelete = (id) => {\r\n    alert(\"Usunięto zadanie o id: \" + id);\r\n    const updatedTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleTaskEdit = (id, task) => {\r\n    const updatedTasks = tasks.map((element) => {\r\n      if (element.id === id) {\r\n        return {\r\n          id,\r\n          name: task.name,\r\n          duration: task.duration,\r\n          status: task.status,\r\n        };\r\n      }\r\n      return element;\r\n    });\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTasks(initialState);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"leadEngineer workpackage\">\r\n      <div className=\"leadEngineer workpackage__details\">\r\n        <div className=\"leadEngineer workpackage__info\">\r\n          <h3>Name: {name}</h3>\r\n          <h4>PID: {pid}</h4>\r\n          <h4>finished tasks: {finishedTasks}</h4>\r\n          <h4>Due to: {endDate}</h4>\r\n          <h4>Predicted due to: {predictedFinish}</h4>\r\n        </div>\r\n        <div className=\"leadEngineer workpackage__description\">\r\n          <h3>Description:</h3>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"leadEngineer workpackage__tasks\">\r\n        <Tasks\r\n          tasks={tasks}\r\n          handleTaskDelete={handleTaskDelete}\r\n          handleTaskEdit={handleTaskEdit}\r\n        ></Tasks>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleTaskAddOpen}>\r\n          Add Task\r\n        </Button>\r\n        <TaskAdd\r\n          isTaskAddOpen={isTaskAddOpen}\r\n          handleTaskAddClose={handleTaskAddClose}\r\n          handleTaskAdd={handleTaskAdd}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workpackage;\r\n","C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\TeamLeader\\AssignTasks\\AssignTasks.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Tasks.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\Task.js",["129"],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskEdit\\TaskEdit.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\TaskAdd\\TaskAdd.js",[],"C:\\Users\\Czerwo\\Desktop\\FTROT2.0\\frontend\\ftrot2\\src\\components\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskDetails\\TaskDetails.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":16},{"ruleId":"134","severity":1,"message":"138","line":1,"column":18,"nodeType":"136","messageId":"137","endLine":1,"endColumn":28},{"ruleId":"134","severity":1,"message":"139","line":1,"column":30,"nodeType":"136","messageId":"137","endLine":1,"endColumn":34},{"ruleId":"134","severity":1,"message":"140","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":16},{"ruleId":"134","severity":1,"message":"141","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":20},{"ruleId":"134","severity":1,"message":"142","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"143","line":32,"column":23,"nodeType":"136","messageId":"137","endLine":32,"endColumn":37},{"ruleId":"134","severity":1,"message":"144","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":17},{"ruleId":"134","severity":1,"message":"145","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":16},{"ruleId":"134","severity":1,"message":"146","line":7,"column":3,"nodeType":"136","messageId":"137","endLine":7,"endColumn":19},{"ruleId":"134","severity":1,"message":"147","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":24},{"ruleId":"134","severity":1,"message":"142","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"143","line":33,"column":23,"nodeType":"136","messageId":"137","endLine":33,"endColumn":37},{"ruleId":"134","severity":1,"message":"142","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"143","line":33,"column":23,"nodeType":"136","messageId":"137","endLine":33,"endColumn":37},{"ruleId":"134","severity":1,"message":"148","line":1,"column":18,"nodeType":"136","messageId":"137","endLine":1,"endColumn":27},{"ruleId":"134","severity":1,"message":"138","line":1,"column":29,"nodeType":"136","messageId":"137","endLine":1,"endColumn":39},{"ruleId":"134","severity":1,"message":"149","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":19},{"ruleId":"134","severity":1,"message":"150","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":14},{"ruleId":"134","severity":1,"message":"151","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":19},{"ruleId":"134","severity":1,"message":"152","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":21},{"ruleId":"134","severity":1,"message":"153","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":21},{"ruleId":"134","severity":1,"message":"154","line":15,"column":7,"nodeType":"136","messageId":"137","endLine":15,"endColumn":23},{"ruleId":"134","severity":1,"message":"140","line":3,"column":3,"nodeType":"136","messageId":"137","endLine":3,"endColumn":9},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Drawer' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'List' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","'setUserDetails' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'TextareaAutosize' is defined but never used.","'CircularProgress' is defined but never used.","'TextField' is defined but never used.","'useFormik' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'validationSchema' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]