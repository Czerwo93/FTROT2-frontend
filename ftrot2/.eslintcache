[{"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\index.js":"1","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\App.js":"2","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\theme.js":"3","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\store.js":"4","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TechnicalProjectManagerActions\\workpackagesActions.js":"5","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\EngineerActions\\tasksActions.js":"6","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\LeadEngineerActions\\workpackageActions.js":"7","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\types.js":"8","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\index.js":"9","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\MessageReducers\\message.js":"10","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\AuthReducers\\auth.js":"11","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\LeadEngineerReducers\\leadEngineer.js":"12","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\EngineerReducers\\engineerReducer.js":"13","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\TeamLeaderReducers\\teamLeaderReducer.js":"14","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TeamLeaderActions\\assignTasksActions.js":"15","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\Account.js":"16","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\Password\\Password.js":"17","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\Information\\Information.js":"18","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\PictureUpload\\PictureUpload.js":"19","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\engineerSidebarActions.js":"20","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\technicalProjectManagerSidebarActions.js":"21","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackages.js":"22","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Tasks.js":"23","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\leadEngineerSidebarActions.js":"24","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackages.js":"25","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\teamLeaderSidebarActions.js":"26","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\AssignTasks.js":"27","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackage\\Workpackage.js":"28","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\WorkpackageAdd\\WorkpackageAdd.js":"29","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Day.js":"30","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\TasksRow.js":"31","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Workpackage.js":"32","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\TasksColumn\\TasksColumn.js":"33","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackage\\WorkpackageDetails\\WorkpackageDetails.js":"34","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\EngineerDetails\\EngineerDetails.js":"35","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Task.js":"36","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\TaskAdd\\TaskAdd.js":"37","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\TasksColumn\\Task\\Task.js":"38","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Tasks.js":"39","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackage\\WorkpackageEdit\\WorkpackageEdit.js":"40","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Action\\TaskStatusEdit.js":"41","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Action\\TaskDetails.js":"42","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Action\\Action.js":"43","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\Task.js":"44","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskEdit\\TaskEdit.js":"45","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskDetails\\TaskDetails.js":"46","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\EngineerBoard.js":"47","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js":"48","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js":"49","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Header\\Header.js":"50","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Login\\Login.js":"51","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Sidebar\\Sidebar.js":"52","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Register\\Register.js":"53","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\Board.js":"54","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\UserDetails\\UserDetails.js":"55","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\UserDetails\\UserDetails.js":"56","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\Diagrams\\Diagrams.js":"57","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\UsefulInformations\\UsefulInformations.js":"58","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\Diagrams\\TabPanel.js":"59","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\LeadEngineerBoard.js":"60","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\UserDetails\\UserDetails.js":"61","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js":"62","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js":"63","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\TechnicalProjectManagerReducers\\technicalProjectManagerReducer.js":"64","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\TechnicalProjectManagerBoard.js":"65","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\UserDetails\\UserDetails.js":"66","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js":"67","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js":"68","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\TeamLeaderBoard.js":"69","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\UserDetails\\UserDetails.js":"70","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js":"71","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js":"72","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\services\\auth.service.js":"73","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\auth.js":"74","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\EngineerActions\\boardActions.js":"75","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\services\\auth-header.js":"76","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\LeadEngineerActions\\boardActions.js":"77","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TechnicalProjectManagerActions\\boardActions.js":"78","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TeamLeaderActions\\boardActions.js":"79","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\AccountActions\\accountActions.js":"80"},{"size":446,"mtime":1613588331971,"results":"81","hashOfConfig":"82"},{"size":8630,"mtime":1615325677210,"results":"83","hashOfConfig":"82"},{"size":3855,"mtime":1615676254169,"results":"84","hashOfConfig":"82"},{"size":354,"mtime":1624743632497,"results":"85","hashOfConfig":"82"},{"size":3531,"mtime":1615842649030,"results":"86","hashOfConfig":"82"},{"size":4929,"mtime":1615660335168,"results":"87","hashOfConfig":"82"},{"size":3701,"mtime":1615241333578,"results":"88","hashOfConfig":"82"},{"size":3025,"mtime":1616251309334,"results":"89","hashOfConfig":"82"},{"size":564,"mtime":1613489038854,"results":"90","hashOfConfig":"82"},{"size":388,"mtime":1613576930982,"results":"91","hashOfConfig":"82"},{"size":997,"mtime":1613079871385,"results":"92","hashOfConfig":"82"},{"size":3234,"mtime":1616251488039,"results":"93","hashOfConfig":"82"},{"size":3718,"mtime":1616251426114,"results":"94","hashOfConfig":"82"},{"size":6451,"mtime":1616251482821,"results":"95","hashOfConfig":"82"},{"size":6318,"mtime":1615154510885,"results":"96","hashOfConfig":"82"},{"size":1167,"mtime":1613079871335,"results":"97","hashOfConfig":"82"},{"size":3205,"mtime":1613079871338,"results":"98","hashOfConfig":"82"},{"size":3754,"mtime":1613213668200,"results":"99","hashOfConfig":"82"},{"size":2107,"mtime":1616251876197,"results":"100","hashOfConfig":"82"},{"size":260,"mtime":1613075223937,"results":"101","hashOfConfig":"82"},{"size":376,"mtime":1613075223986,"results":"102","hashOfConfig":"82"},{"size":3481,"mtime":1615849056088,"results":"103","hashOfConfig":"82"},{"size":3686,"mtime":1615631915835,"results":"104","hashOfConfig":"82"},{"size":330,"mtime":1613075223964,"results":"105","hashOfConfig":"82"},{"size":2102,"mtime":1615848192817,"results":"106","hashOfConfig":"82"},{"size":656,"mtime":1613075223978,"results":"107","hashOfConfig":"82"},{"size":3420,"mtime":1615151708199,"results":"108","hashOfConfig":"82"},{"size":4388,"mtime":1615849019877,"results":"109","hashOfConfig":"82"},{"size":6295,"mtime":1615717767777,"results":"110","hashOfConfig":"82"},{"size":1353,"mtime":1615326063917,"results":"111","hashOfConfig":"82"},{"size":2989,"mtime":1615142636245,"results":"112","hashOfConfig":"82"},{"size":3452,"mtime":1615848817301,"results":"113","hashOfConfig":"82"},{"size":2470,"mtime":1615151897846,"results":"114","hashOfConfig":"82"},{"size":3114,"mtime":1615760765635,"results":"115","hashOfConfig":"82"},{"size":3009,"mtime":1614521796563,"results":"116","hashOfConfig":"82"},{"size":3667,"mtime":1615327990136,"results":"117","hashOfConfig":"82"},{"size":3407,"mtime":1615847876463,"results":"118","hashOfConfig":"82"},{"size":765,"mtime":1615110763210,"results":"119","hashOfConfig":"82"},{"size":2164,"mtime":1615330582915,"results":"120","hashOfConfig":"82"},{"size":6381,"mtime":1615756055900,"results":"121","hashOfConfig":"82"},{"size":2313,"mtime":1613075223930,"results":"122","hashOfConfig":"82"},{"size":868,"mtime":1614273393147,"results":"123","hashOfConfig":"82"},{"size":654,"mtime":1615328458178,"results":"124","hashOfConfig":"82"},{"size":2930,"mtime":1615331016986,"results":"125","hashOfConfig":"82"},{"size":3475,"mtime":1615848080626,"results":"126","hashOfConfig":"82"},{"size":1201,"mtime":1614500967775,"results":"127","hashOfConfig":"82"},{"size":453,"mtime":1613485122222,"results":"128","hashOfConfig":"82"},{"size":2550,"mtime":1615661802562,"results":"129","hashOfConfig":"82"},{"size":1618,"mtime":1615660494580,"results":"130","hashOfConfig":"82"},{"size":2753,"mtime":1615323975497,"results":"131","hashOfConfig":"82"},{"size":4713,"mtime":1614501799544,"results":"132","hashOfConfig":"82"},{"size":1622,"mtime":1613553774667,"results":"133","hashOfConfig":"82"},{"size":4049,"mtime":1613219137377,"results":"134","hashOfConfig":"82"},{"size":959,"mtime":1613485217583,"results":"135","hashOfConfig":"82"},{"size":3415,"mtime":1616247574119,"results":"136","hashOfConfig":"82"},{"size":645,"mtime":1613473161493,"results":"137","hashOfConfig":"82"},{"size":1809,"mtime":1613472301635,"results":"138","hashOfConfig":"82"},{"size":567,"mtime":1613484920436,"results":"139","hashOfConfig":"82"},{"size":325,"mtime":1613472301651,"results":"140","hashOfConfig":"82"},{"size":463,"mtime":1613487907947,"results":"141","hashOfConfig":"82"},{"size":2762,"mtime":1616249266496,"results":"142","hashOfConfig":"82"},{"size":1901,"mtime":1615849328238,"results":"143","hashOfConfig":"82"},{"size":1459,"mtime":1615242234982,"results":"144","hashOfConfig":"82"},{"size":2691,"mtime":1616251477657,"results":"145","hashOfConfig":"82"},{"size":485,"mtime":1613490988926,"results":"146","hashOfConfig":"82"},{"size":2833,"mtime":1616249252850,"results":"147","hashOfConfig":"82"},{"size":1973,"mtime":1615665301197,"results":"148","hashOfConfig":"82"},{"size":1511,"mtime":1615332515176,"results":"149","hashOfConfig":"82"},{"size":459,"mtime":1613491651249,"results":"150","hashOfConfig":"82"},{"size":2779,"mtime":1616249259369,"results":"151","hashOfConfig":"82"},{"size":1908,"mtime":1624743563199,"results":"152","hashOfConfig":"82"},{"size":1446,"mtime":1615319608461,"results":"153","hashOfConfig":"82"},{"size":549,"mtime":1613570222338,"results":"154","hashOfConfig":"82"},{"size":2190,"mtime":1613676806451,"results":"155","hashOfConfig":"82"},{"size":2650,"mtime":1615660496813,"results":"156","hashOfConfig":"82"},{"size":208,"mtime":1614274707660,"results":"157","hashOfConfig":"82"},{"size":2817,"mtime":1615242199198,"results":"158","hashOfConfig":"82"},{"size":2940,"mtime":1615243780600,"results":"159","hashOfConfig":"82"},{"size":2756,"mtime":1615318928621,"results":"160","hashOfConfig":"82"},{"size":1076,"mtime":1616251336603,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"1j9xlrh",{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"164"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"164"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"164"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"164"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"164"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"164"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"164"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"164"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"164"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"164"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"164"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"164"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"164"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"164"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"164"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"164"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"164"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"164"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"164"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"164"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"164"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"164"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"164"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"164"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"164"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"164"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"164"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"164"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"164"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"164"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\index.js",[],["365","366"],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\App.js",["367","368"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport EngineerBoard from \"./components/Roles/Engineer/Board/EngineerBoard\";\r\nimport Header from \"./components/Layout/Header/Header\";\r\nimport Sidebar from \"./components/Layout/Sidebar/Sidebar\";\r\nimport engineerSidebarActions from \"./components/Roles/Engineer/engineerSidebarActions\";\r\nimport technicalProjectManagerSidebarActions from \"./components/Roles/TechnicalProjectManager/technicalProjectManagerSidebarActions\";\r\nimport TechnicalProjectManagerBoard from \"./components/Roles/TechnicalProjectManager/Board/TechnicalProjectManagerBoard\";\r\nimport Workpackages from \"./components/Roles/TechnicalProjectManager/Workpackages/Workpackages\";\r\nimport EngineerTasks from \"./components/Roles/Engineer/Tasks/Tasks\";\r\nimport LeadEngineerBoard from \"./components/Roles/LeadEngineer/Board/LeadEngineerBoard\";\r\nimport LeadEngineerWorkpackages from \"./components/Roles/LeadEngineer/Workpackages/Workpackages\";\r\nimport leadEngineerSidebarActions from \"./components/Roles/LeadEngineer/leadEngineerSidebarActions\";\r\nimport TeamLeaderBoard from \"./components/Roles/TeamLeader/Board/TeamLeaderBoard\";\r\nimport teamLeaderSidebarActions from \"./components/Roles/TeamLeader/teamLeaderSidebarActions\";\r\nimport AssignTasks from \"./components/Roles/TeamLeader/AssignTasks/AssignTasks\";\r\nimport { StylesProvider, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Account from \"./components/Layout/Account/Account\";\r\nimport Login from \"./components/Layout/Login/Login\";\r\nimport { theme } from \"./theme\";\r\nimport Register from \"./components/Layout/Register/Register\";\r\nimport { logout } from \"./actions/auth\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledApp = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledAppBody = styled.div`\r\n  background-color: #303133;\r\n  width: 100%;\r\n  min-height: calc(100vh - 58px);\r\n`;\r\n\r\nfunction App() {\r\n  // const [isLogged, setIsLogged] = useState(true);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state) => state.auth.user);\r\n  let history = useHistory();\r\n  const [\r\n    showTechnicalProjectManagerContent,\r\n    setShowTechnicalProjectManagerContent,\r\n  ] = useState(false);\r\n  const [showEngineerContent, setShowEngineerContent] = useState(false);\r\n  const [showTeamLeaderContent, setShowTeamLeaderContent] = useState(false);\r\n  const [showLeadEngineerContent, setShowLeadEngineerContent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      if (\r\n        currentUser.authorities[0].authority ===\r\n        \"ROLE_TECHNICAL_PROJECT_MANAGER\"\r\n      ) {\r\n        setShowTechnicalProjectManagerContent(true);\r\n        history.push(\"/technical-project-manager/board\");\r\n      } else setShowTechnicalProjectManagerContent(false);\r\n\r\n      if (currentUser.authorities[0].authority === \"ROLE_LEAD_ENGINEER\") {\r\n        setShowLeadEngineerContent(true);\r\n        history.push(\"/lead-engineer/board\");\r\n      } else setShowLeadEngineerContent(false);\r\n\r\n      if (currentUser.authorities[0].authority === \"ROLE_TEAM_LEADER\") {\r\n        setShowTeamLeaderContent(true);\r\n        history.push(\"/team-leader/board\");\r\n      } else setShowTeamLeaderContent(false);\r\n\r\n      if (currentUser.authorities[0].authority === \"ROLE_ENGINEER\") {\r\n        setShowEngineerContent(true);\r\n        history.push(\"/engineer/board\");\r\n      } else setShowEngineerContent(false);\r\n    } else history.push(\"/login\");\r\n  }, [currentUser]);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleSidebarOpen = () => {\r\n    setIsSidebarOpen(true);\r\n  };\r\n\r\n  const handleSidebarClose = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <StylesProvider injectFirst>\r\n        <StyledApp>\r\n          {currentUser && (\r\n            <Header\r\n              handleDrawerOpen={handleSidebarOpen}\r\n              handleLogOut={handleLogOut}\r\n              isDrawerOpen={isSidebarOpen}\r\n            />\r\n          )}\r\n          <Switch>\r\n            {showEngineerContent && (\r\n              <Route\r\n                path=\"/engineer/\"\r\n                render={() => (\r\n                  <Sidebar\r\n                    isSidebarOpen={isSidebarOpen}\r\n                    handleSidebarClose={handleSidebarClose}\r\n                    actions={engineerSidebarActions}\r\n                  ></Sidebar>\r\n                )}\r\n              ></Route>\r\n            )}\r\n            {showTechnicalProjectManagerContent && (\r\n              <Route\r\n                path=\"/technical-project-manager/\"\r\n                render={() => (\r\n                  <Sidebar\r\n                    isSidebarOpen={isSidebarOpen}\r\n                    handleSidebarClose={handleSidebarClose}\r\n                    actions={technicalProjectManagerSidebarActions}\r\n                  ></Sidebar>\r\n                )}\r\n              ></Route>\r\n            )}\r\n            {showLeadEngineerContent && (\r\n              <Route\r\n                path=\"/lead-engineer/\"\r\n                render={() => (\r\n                  <Sidebar\r\n                    isSidebarOpen={isSidebarOpen}\r\n                    handleSidebarClose={handleSidebarClose}\r\n                    actions={leadEngineerSidebarActions}\r\n                  ></Sidebar>\r\n                )}\r\n              ></Route>\r\n            )}\r\n            {showTeamLeaderContent && (\r\n              <Route\r\n                path=\"/team-leader/\"\r\n                render={() => (\r\n                  <Sidebar\r\n                    isSidebarOpen={isSidebarOpen}\r\n                    handleSidebarClose={handleSidebarClose}\r\n                    actions={teamLeaderSidebarActions}\r\n                  ></Sidebar>\r\n                )}\r\n              ></Route>\r\n            )}\r\n          </Switch>\r\n\r\n          <StyledAppBody>\r\n            <Switch>\r\n              <Route path=\"/login\" exact component={Login}></Route>\r\n              <Route path=\"/register\" exact component={Register}></Route>\r\n              {currentUser && (\r\n                <>\r\n                  <Route path=\"/account\" exact component={Account}></Route>\r\n                  {showEngineerContent && (\r\n                    <>\r\n                      <Route\r\n                        path=\"/engineer/board\"\r\n                        exact\r\n                        component={EngineerBoard}\r\n                      ></Route>\r\n                      <Route\r\n                        path=\"/engineer/tasks\"\r\n                        exact\r\n                        component={EngineerTasks}\r\n                      ></Route>\r\n                    </>\r\n                  )}\r\n                  {showTechnicalProjectManagerContent && (\r\n                    <>\r\n                      <Route\r\n                        path=\"/technical-project-manager/board\"\r\n                        exact\r\n                        component={TechnicalProjectManagerBoard}\r\n                      ></Route>\r\n                      <Route\r\n                        path=\"/technical-project-manager/workpackages\"\r\n                        exact\r\n                        component={Workpackages}\r\n                      ></Route>\r\n                    </>\r\n                  )}\r\n                  {showLeadEngineerContent && (\r\n                    <>\r\n                      <Route\r\n                        path=\"/lead-engineer/board\"\r\n                        exact\r\n                        component={LeadEngineerBoard}\r\n                      ></Route>\r\n                      <Route\r\n                        path=\"/lead-engineer/workpackages\"\r\n                        exact\r\n                        component={LeadEngineerWorkpackages}\r\n                      ></Route>\r\n                    </>\r\n                  )}\r\n                  {showTeamLeaderContent && (\r\n                    <>\r\n                      <Route\r\n                        path=\"/team-leader/board\"\r\n                        exact\r\n                        component={TeamLeaderBoard}\r\n                      ></Route>\r\n                      <Route\r\n                        path=\"/team-leader/assign-tasks\"\r\n                        exact\r\n                        component={AssignTasks}\r\n                      ></Route>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </Switch>\r\n          </StyledAppBody>\r\n        </StyledApp>\r\n      </StylesProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\theme.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\store.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TechnicalProjectManagerActions\\workpackagesActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\EngineerActions\\tasksActions.js",["369"],"import axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  GET_TASKS,\r\n  SET_TASK_DONE,\r\n  SET_TASK_HOLD,\r\n  CHANGE_TASK_STATUS,\r\n  SET_MESSAGE,\r\n  CLEAR_MESSAGE,\r\n  GET_USER_WEEK,\r\n} from \"../types\";\r\nconst API_URL = \"http://localhost:8080/api/v1/engineer/tasks\";\r\n\r\nexport const getCurrentWeekWithTasks = () => async (dispatch) => {\r\n  axios\r\n    .get(API_URL, {\r\n      headers: authHeader(),\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      dispatch({\r\n        type: GET_USER_WEEK,\r\n        payload: { data },\r\n      });\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n      return Promise.reject();\r\n    });\r\n};\r\n\r\nexport const getNextWeekWithTasks = (weekNumber, yearNumber) => async (\r\n  dispatch\r\n) => {\r\n  axios\r\n    .get(API_URL + \"/next-week\", {\r\n      headers: authHeader(),\r\n      params: {\r\n        yearNumber,\r\n        weekNumber,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      dispatch({\r\n        type: GET_USER_WEEK,\r\n        payload: { data },\r\n      });\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n      return Promise.reject();\r\n    });\r\n};\r\n\r\nexport const getPreviousWeekWithTasks = (weekNumber, yearNumber) => async (\r\n  dispatch\r\n) => {\r\n  axios\r\n    .get(API_URL + \"/previous-week\", {\r\n      headers: authHeader(),\r\n      params: {\r\n        yearNumber,\r\n        weekNumber,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      dispatch({\r\n        type: GET_USER_WEEK,\r\n        payload: { data },\r\n      });\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n      return Promise.reject();\r\n    });\r\n};\r\nexport const setTaskDoneAction = (dayId, taskId) => async (dispatch) => {\r\n  //setTimeout(() => {}, 2000);\r\n  axios\r\n    .patch(\r\n      `${API_URL}/${taskId}`,\r\n      {},\r\n      {\r\n        headers: authHeader(),\r\n        params: {\r\n          status: 1,\r\n        },\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      dispatch({\r\n        type: SET_TASK_DONE,\r\n        payload: {\r\n          taskId,\r\n          dayId,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n      return Promise.reject();\r\n    });\r\n};\r\n\r\nexport const setTaskOnHold = (dayId, taskId) => async (dispatch) => {\r\n  //setTimeout(() => {}, 2000);\r\n  dispatch({\r\n    type: SET_TASK_HOLD,\r\n    payload: {\r\n      taskId,\r\n      dayId,\r\n    },\r\n  });\r\n};\r\n\r\nexport const ChangeTaskStatusAction = (dayId, taskId, status) => async (\r\n  dispatch\r\n) => {\r\n  axios\r\n    .patch(\r\n      API_URL + \"/\" + taskId,\r\n      {},\r\n      {\r\n        params: {\r\n          status,\r\n        },\r\n        headers: authHeader(),\r\n      }\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      dispatch({\r\n        type: CHANGE_TASK_STATUS,\r\n        payload: {\r\n          taskId,\r\n          dayId,\r\n          status,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n      return Promise.reject();\r\n    });\r\n};\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\LeadEngineerActions\\workpackageActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\types.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\index.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\MessageReducers\\message.js",["370"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../../actions/types\";\r\n\r\nconst initialState = { message: \"\" };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\AuthReducers\\auth.js",["371"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\LeadEngineerReducers\\leadEngineer.js",["372"],"import moment from \"moment\";\r\nimport {\r\n  GET_LEAD_ENGINEER_BOARD_INFO,\r\n  GET_LEAD_ENGINEER_BOARD_WORKPACKAGES,\r\n  GET_LEAD_ENGINEER_BOARD_GRAPH_DETAILS,\r\n  ADD_LEAD_ENGINEER_TASK,\r\n  EDIT_LEAD_ENGINEER_TASK,\r\n  DELETE_LEAD_ENGINEER_TASK,\r\n  GET_LEAD_ENGINEER_WORKPACKAGES,\r\n  UPLOAD_PICTURE,\r\n} from \"../../actions/types\";\r\n\r\nconst initialState = {\r\n  workpackages: [],\r\n  userInfo: {\r\n    pictureUrl: \"\",\r\n\r\n    workPackages: [],\r\n    statusOfWorkpackages: [],\r\n  },\r\n};\r\n\r\nconst leadEngineer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_LEAD_ENGINEER_BOARD_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          name: payload.name,\r\n          surname: payload.surname,\r\n          team: payload.team,\r\n          role: payload.role,\r\n          finishedWorkPackages: payload.finishedWorkPackages,\r\n          joinedAt: payload.joinedAt,\r\n          unfinishedWorkPackages: payload.unfinishedWorkPackages,\r\n          supervisor: payload.supervisor,\r\n          pictureUrl: payload.pictureUrl,\r\n        },\r\n      };\r\n\r\n    case UPLOAD_PICTURE:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          pictureUrl: payload,\r\n        },\r\n      };\r\n\r\n    case GET_LEAD_ENGINEER_BOARD_WORKPACKAGES:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          workPackages: payload.workPackages,\r\n        },\r\n      };\r\n\r\n    case GET_LEAD_ENGINEER_BOARD_GRAPH_DETAILS:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          statusOfWorkpackages: payload,\r\n        },\r\n      };\r\n\r\n    case GET_LEAD_ENGINEER_WORKPACKAGES:\r\n      return {\r\n        ...state,\r\n        workpackages: payload,\r\n      };\r\n    case ADD_LEAD_ENGINEER_TASK:\r\n      return {\r\n        ...state,\r\n        workpackages: state.workpackages.map((workpackage) => {\r\n          if (workpackage.id === payload.workpackageId) {\r\n            return {\r\n              ...workpackage,\r\n              tasks: [...workpackage.tasks, payload.task],\r\n            };\r\n          }\r\n          return workpackage;\r\n        }),\r\n      };\r\n    case DELETE_LEAD_ENGINEER_TASK:\r\n      return {\r\n        ...state,\r\n        workpackages: state.workpackages.map((workpackage) => {\r\n          if (workpackage.id === payload.workpackageId)\r\n            return {\r\n              ...workpackage,\r\n              tasks: workpackage.tasks.filter(\r\n                (task) => task.id !== payload.taskId\r\n              ),\r\n            };\r\n          return workpackage;\r\n        }),\r\n      };\r\n    case EDIT_LEAD_ENGINEER_TASK:\r\n      return {\r\n        ...state,\r\n        workpackages: state.workpackages.map((workpackage) => {\r\n          if (workpackage.id === payload.workpackageId) {\r\n            return {\r\n              ...workpackage,\r\n              tasks: workpackage.tasks.map((task) => {\r\n                if (task.id === payload.taskId) return payload.editedTask;\r\n                return task;\r\n              }),\r\n            };\r\n          }\r\n          return workpackage;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default leadEngineer;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\EngineerReducers\\engineerReducer.js",["373","374"],"import { uuid } from \"uuidv4\";\r\nimport moment from \"moment\";\r\nimport {\r\n  GET_TASKS,\r\n  SET_TASK_DONE,\r\n  CHANGE_TASK_STATUS,\r\n  SET_TASK_HOLD,\r\n  GET_USER_INFO,\r\n  GET_USER_TASKS,\r\n  GET_USER_WEEK,\r\n  GET_USER_GRAPH_DETAILS,\r\n  UPLOAD_PICTURE,\r\n} from \"../../actions/types\";\r\n\r\nconst userInfo = {\r\n  name: \"Mateusz\",\r\n  surname: \"Czerwiński\",\r\n  team: \"DLSC2\",\r\n  role: \"Lead Eangineer\",\r\n  supervisor: \"Wojciech Zabiegło\",\r\n  joinedAt: moment(Date.now()).calendar(),\r\n  pictureUrl: \"\",\r\n  reworkRatio: 0.05,\r\n  unfinishedTasks: 10,\r\n  currentTasks: [],\r\n};\r\n\r\nconst initialState = {\r\n  schedule: {},\r\n  userInfo: {\r\n    pictureUrl: \"\",\r\n  },\r\n  reworkHours: [5, 6, 7, 8, 5, 4, 3, 2, 5, 9, 12, 11],\r\n  statusOfWorkInCurrentWeek: [0, 40, 0],\r\n};\r\n\r\nconst engineerReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_USER_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          name: payload.name,\r\n          surname: payload.surname,\r\n          team: payload.team,\r\n          role: payload.role,\r\n          supervisor: payload.supervisor,\r\n          joinedAt: payload.joinedAt,\r\n          reworkRatio: payload.reworkRatio,\r\n          unfinishedTasks: payload.unfinishedTasks,\r\n          pictureUrl: payload.pictureUrl,\r\n        },\r\n      };\r\n    case UPLOAD_PICTURE:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          pictureUrl: payload,\r\n        },\r\n      };\r\n\r\n    case GET_USER_TASKS:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          currentTasks: payload.currentTasks,\r\n        },\r\n      };\r\n    case GET_USER_GRAPH_DETAILS:\r\n      return {\r\n        ...state,\r\n        statusOfWorkInCurrentWeek: payload,\r\n      };\r\n    case GET_TASKS:\r\n      return { ...state };\r\n    case GET_USER_WEEK:\r\n      return { ...state, schedule: payload.data };\r\n    case SET_TASK_DONE:\r\n      return {\r\n        ...state,\r\n        schedule: {\r\n          ...state.schedule,\r\n          days: state.schedule.days.map((day) => {\r\n            if (day.id === payload.dayId) {\r\n              day.tasks.map((task) => {\r\n                if (task.id === payload.taskId) {\r\n                  task.isDone = !task.isDone;\r\n                  task.status = 1;\r\n                  return task;\r\n                }\r\n                return task;\r\n              });\r\n            }\r\n            return day;\r\n          }),\r\n        },\r\n      };\r\n    case SET_TASK_HOLD:\r\n      return {\r\n        ...state,\r\n        schedule: {\r\n          ...state.schedule,\r\n          days: state.schedule.days.map((day) => {\r\n            if (day.id === payload.dayId) {\r\n              day.tasks.map((task) => {\r\n                if (task.id === payload.taskId) {\r\n                  task.isOnHold = !task.isOnHold;\r\n                  return task;\r\n                }\r\n                return task;\r\n              });\r\n            }\r\n            return day;\r\n          }),\r\n        },\r\n      };\r\n    case CHANGE_TASK_STATUS:\r\n      return {\r\n        ...state,\r\n        schedule: {\r\n          ...state.schedule,\r\n          days: state.schedule.days.map((day) => {\r\n            if (day.id === payload.dayId) {\r\n              day.tasks.map((task) => {\r\n                if (task.id === payload.taskId) {\r\n                  task.status = payload.status;\r\n                  if (payload.status === 1) task.isDone = true;\r\n                  return task;\r\n                }\r\n                return task;\r\n              });\r\n            }\r\n            return day;\r\n          }),\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default engineerReducer;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\TeamLeaderReducers\\teamLeaderReducer.js",["375","376"],"import moment from \"moment\";\r\nimport {\r\n  ADD_TO_BACKLOG,\r\n  ADD_TO_DAY_ID,\r\n  ADD_TO_UNFINISHED_TASKS,\r\n  ASSIGN_TASK,\r\n  DELETE_FROM_BACKLOG,\r\n  DELETE_FROM_DAY_ID,\r\n  DELETE_FROM_UNFINISHED_TASKS,\r\n  GET_COLUMNS,\r\n  GET_TEAM_LEADER_BOARD_GRAPH_DETAILS,\r\n  GET_TEAM_LEADER_BOARD_INFO,\r\n  GET_TEAM_LEADER_BOARD_WORKPACKAGES,\r\n  GET_WEEK_WITH_TASKS_FOR_TEAM_LEADER,\r\n  UPLOAD_PICTURE,\r\n} from \"../../actions/types\";\r\n\r\nconst userInfo = {\r\n  pictureUrl: \"\",\r\n\r\n  workPackages: [],\r\n  statusOfWorkpackages: [],\r\n};\r\n\r\nconst initialState = {\r\n  columns: {\r\n    unassignedTasks: [],\r\n    engineers: [\r\n      {\r\n        week: [],\r\n      },\r\n    ],\r\n  },\r\n  userInfo: {\r\n    pictureUrl: \"\",\r\n  },\r\n};\r\n\r\nconst teamLeader = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_TEAM_LEADER_BOARD_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          name: payload.name,\r\n          surname: payload.surname,\r\n          team: payload.team,\r\n          role: payload.role,\r\n          teamMembersQuantity: payload.teamMembers,\r\n          joinedAt: payload.joinedAt,\r\n          unfinishedWorkPackages: payload.unfinishedWorkPackages,\r\n          supervisor: payload.supervisor,\r\n          pictureUrl: payload.pictureUrl,\r\n        },\r\n      };\r\n\r\n    case UPLOAD_PICTURE:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          pictureUrl: payload,\r\n        },\r\n      };\r\n    case GET_TEAM_LEADER_BOARD_WORKPACKAGES:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          workPackages: payload.workPackages,\r\n        },\r\n      };\r\n\r\n    case GET_TEAM_LEADER_BOARD_GRAPH_DETAILS:\r\n      return {\r\n        ...state,\r\n        userInfo: {\r\n          ...state.userInfo,\r\n          statusOfWorkpackages: [payload, 10, 10],\r\n        },\r\n      };\r\n\r\n    case GET_COLUMNS:\r\n      return {\r\n        ...state,\r\n        columns: payload,\r\n      };\r\n\r\n    case ASSIGN_TASK:\r\n      return {\r\n        ...state,\r\n        columns: state.columns.map((column) => {\r\n          payload.forEach((element) => {\r\n            if (column.rowId === element.rowId) column = element;\r\n          });\r\n          // if (column.rowId === payload[0].rowId) return payload[0];\r\n          return column;\r\n        }),\r\n      };\r\n\r\n    case GET_WEEK_WITH_TASKS_FOR_TEAM_LEADER:\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          engineers: state.columns.engineers.map((engineer) => {\r\n            if (engineer.id === payload.engineerId)\r\n              return { ...engineer, week: payload.data };\r\n            return engineer;\r\n          }),\r\n        },\r\n      };\r\n\r\n    case DELETE_FROM_UNFINISHED_TASKS: {\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          unassignedTasks: state.columns.unassignedTasks.filter(\r\n            (task, index) => index !== payload.index\r\n          ),\r\n        },\r\n      };\r\n    }\r\n    case DELETE_FROM_BACKLOG: {\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          engineers: state.columns.engineers.map((engineer) => {\r\n            if (engineer.id === payload.engineerId)\r\n              return {\r\n                ...engineer,\r\n                backlog: engineer.backlog.filter(\r\n                  (task, index) => index !== payload.index\r\n                ),\r\n              };\r\n            return engineer;\r\n          }),\r\n        },\r\n      };\r\n    }\r\n    case DELETE_FROM_DAY_ID: {\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          engineers: state.columns.engineers.map((engineer) => {\r\n            if (engineer.id === payload.engineerId) {\r\n              return {\r\n                ...engineer,\r\n                week: {\r\n                  ...engineer.week,\r\n                  days: engineer.week.days.map((day) => {\r\n                    if (day.id === payload.dayId)\r\n                      return {\r\n                        ...day,\r\n                        tasks: day.tasks.filter(\r\n                          (task, index) => index !== payload.index\r\n                        ),\r\n                      };\r\n                    return day;\r\n                  }),\r\n                },\r\n              };\r\n            }\r\n            return engineer;\r\n          }),\r\n        },\r\n      };\r\n    }\r\n\r\n    case ADD_TO_UNFINISHED_TASKS: {\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          unassignedTasks: addTask(\r\n            state.columns.unassignedTasks,\r\n            payload.task,\r\n            payload.index\r\n          ), // state.columns.unassignedTasks.splice(\r\n          //   payload.index,\r\n          //   0,\r\n          //   payload.task\r\n          // ),\r\n        },\r\n      };\r\n    }\r\n    case ADD_TO_BACKLOG: {\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          engineers: state.columns.engineers.map((engineer) => {\r\n            if (engineer.id === payload.engineerId)\r\n              return {\r\n                ...engineer,\r\n                backlog: addTask(engineer.backlog, payload.task, payload.index), //.splice(payload.index,0,payload.task),\r\n              };\r\n            return engineer;\r\n          }),\r\n        },\r\n      };\r\n    }\r\n    case ADD_TO_DAY_ID: {\r\n      return {\r\n        ...state,\r\n        columns: {\r\n          ...state.columns,\r\n          engineers: state.columns.engineers.map((engineer) => {\r\n            if (engineer.id === payload.engineerId) {\r\n              return {\r\n                ...engineer,\r\n                week: {\r\n                  ...engineer.week,\r\n                  days: engineer.week.days.map((day) => {\r\n                    if (day.id === payload.dayId)\r\n                      return {\r\n                        ...day,\r\n                        tasks: addTask(day.tasks, payload.task, payload.index), //day.tasks.splice(payload.index, 0, payload.task),\r\n                      };\r\n                    return day;\r\n                  }),\r\n                },\r\n              };\r\n            }\r\n            return engineer;\r\n          }),\r\n        },\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst addTask = (tasks, task, index) => {\r\n  const copiedTasks = [...tasks];\r\n  copiedTasks.splice(index, 0, task);\r\n  return copiedTasks;\r\n};\r\n\r\nexport default teamLeader;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TeamLeaderActions\\assignTasksActions.js",["377"],"import axios from \"axios\";\r\nimport authHeader from \"../../services/auth-header\";\r\nimport {\r\n  ASSIGN_TASK,\r\n  CLEAR_MESSAGE,\r\n  GET_COLUMNS,\r\n  SET_MESSAGE,\r\n  GET_WEEK_WITH_TASKS_FOR_TEAM_LEADER,\r\n  DELETE_FROM_UNFINISHED_TASKS,\r\n  DELETE_FROM_BACKLOG,\r\n  DELETE_FROM_DAY_ID,\r\n  ADD_TO_UNFINISHED_TASKS,\r\n  ADD_TO_BACKLOG,\r\n  ADD_TO_DAY_ID,\r\n} from \"../types\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/v1/team-leader/\";\r\n\r\nexport const getColumns = () => async (dispatch) => {\r\n  axios\r\n    .get(API_URL + \"assign-tasks/data\", { headers: authHeader() })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      dispatch({\r\n        type: GET_COLUMNS,\r\n        payload: data,\r\n      });\r\n\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    });\r\n};\r\n\r\nexport const getWeekWithTasksForTeamLeader = (\r\n  weekNumber,\r\n  yearNumber,\r\n  engineerId\r\n) => async (dispatch) => {\r\n  axios\r\n    .get(API_URL + \"assign-tasks/weeks\", {\r\n      headers: authHeader(),\r\n      params: {\r\n        yearNumber,\r\n        weekNumber,\r\n        engineerId,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    })\r\n    .then((data) => {\r\n      dispatch({\r\n        type: GET_WEEK_WITH_TASKS_FOR_TEAM_LEADER,\r\n        payload: { data, engineerId },\r\n      });\r\n\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    });\r\n};\r\n\r\nconst findColumn = (id, columns) => {\r\n  let foundColumn = [];\r\n  if (id === \"unassignedTasks\") return columns.unassignedTasks;\r\n  if (id.substring(0, 8) === \"backlog_\") {\r\n    columns.engineers.forEach((engineer) => {\r\n      if (engineer.id === parseInt(id.substring(8), 10))\r\n        foundColumn = engineer.backlog;\r\n    });\r\n  }\r\n\r\n  if (id.substring(0, 4) === \"day_\") {\r\n    for (let engineer of columns.engineers) {\r\n      if (\r\n        engineer.week.days.some(\r\n          (day) => day.id === parseInt(id.substring(4), 10)\r\n        )\r\n      ) {\r\n        let column = engineer.week.days.find(\r\n          (day) => day.id === parseInt(id.substring(4), 10)\r\n        );\r\n        foundColumn = column.tasks;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return foundColumn;\r\n};\r\n\r\nconst findEngineerId = (id, columns) => {\r\n  for (let engineer of columns.engineers) {\r\n    if (\r\n      id.substring(0, 4) === \"day_\" &&\r\n      engineer.week.days.some((day) => day.id === parseInt(id.substring(4), 10))\r\n    )\r\n      return engineer.id;\r\n    if (\r\n      id.substring(0, 8) === \"backlog_\" &&\r\n      engineer.id === parseInt(id.substring(8), 10)\r\n    )\r\n      return engineer.id;\r\n  }\r\n};\r\n\r\nexport const setNewColumnForTasks = (\r\n  source,\r\n  destination,\r\n  // sourceColumnId,\r\n  // sourceTaskIndex,\r\n  // destinationColumnId,\r\n  // destinationIndex,\r\n  // sourceColumn,\r\n  // destinationColumn,\r\n  columns\r\n) => async (dispatch) => {\r\n  // find task with source column\r\n\r\n  const sourceColumn = findColumn(source.droppableId, columns);\r\n\r\n  const task = sourceColumn[source.index];\r\n\r\n  let requestObject;\r\n\r\n  if (destination.droppableId === \"unassignedTasks\") {\r\n    requestObject = {\r\n      inUnfinishedTasks: true,\r\n      sorting: destination.index,\r\n    };\r\n  }\r\n\r\n  if (destination.droppableId.substring(0, 8) === \"backlog_\") {\r\n    requestObject = {\r\n      engineerId: findEngineerId(destination.droppableId, columns),\r\n      inBacklog: true,\r\n      sorting: destination.index,\r\n    };\r\n  }\r\n\r\n  if (destination.droppableId.substring(0, 4) === \"day_\") {\r\n    requestObject = {\r\n      dayId: parseInt(destination.droppableId.substring(4), 10),\r\n      engineerId: findEngineerId(destination.droppableId, columns),\r\n      sorting: destination.index,\r\n    };\r\n  }\r\n\r\n  axios\r\n    .patch(API_URL + \"assign-tasks/tasks/\" + task.id, requestObject, {\r\n      headers: authHeader(),\r\n    })\r\n    .then(() => {\r\n      //delete task from 1 column\r\n      if (source.droppableId === \"unassignedTasks\")\r\n        dispatch({\r\n          type: DELETE_FROM_UNFINISHED_TASKS,\r\n          payload: {\r\n            index: source.index,\r\n          },\r\n        });\r\n      if (source.droppableId.substring(0, 8) === \"backlog_\")\r\n        dispatch({\r\n          type: DELETE_FROM_BACKLOG,\r\n          payload: {\r\n            engineerId: findEngineerId(source.droppableId, columns),\r\n            index: source.index,\r\n          },\r\n        });\r\n      if (source.droppableId.substring(0, 4) === \"day_\")\r\n        dispatch({\r\n          type: DELETE_FROM_DAY_ID,\r\n          payload: {\r\n            engineerId: findEngineerId(source.droppableId, columns),\r\n            dayId: parseInt(source.droppableId.substring(4), 10),\r\n            index: source.index,\r\n          },\r\n        });\r\n\r\n      //add task to 1 column\r\n      if (destination.droppableId === \"unassignedTasks\")\r\n        dispatch({\r\n          type: ADD_TO_UNFINISHED_TASKS,\r\n          payload: {\r\n            index: destination.index,\r\n            task,\r\n          },\r\n        });\r\n      if (destination.droppableId.substring(0, 8) === \"backlog_\")\r\n        dispatch({\r\n          type: ADD_TO_BACKLOG,\r\n          payload: {\r\n            engineerId: findEngineerId(destination.droppableId, columns),\r\n            index: destination.index,\r\n            task,\r\n          },\r\n        });\r\n      if (destination.droppableId.substring(0, 4) === \"day_\")\r\n        dispatch({\r\n          type: ADD_TO_DAY_ID,\r\n          payload: {\r\n            engineerId: findEngineerId(destination.droppableId, columns),\r\n            dayId: parseInt(destination.droppableId.substring(4), 10),\r\n            index: destination.index,\r\n            task,\r\n          },\r\n        });\r\n    });\r\n};\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\Account.js",["378","379"],"import { Button, Grid, Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Information from \"./Information/Information\";\r\nimport Password from \"./Password/Password\";\r\nimport styled from \"styled-components\";\r\nimport PictureUpload from \"./PictureUpload/PictureUpload\";\r\n\r\nconst StyledBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 10px 8px 0 8px;\r\n  display: flex;\r\n\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst Account = () => {\r\n  return (\r\n    <StyledBackground>\r\n      <Grid container spacing={1} justify={\"center\"}>\r\n        <Grid item container xs={12} justify={\"center\"}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Information />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={12} justify={\"center\"}>\r\n          <Grid item xs={12} sm={6}>\r\n            <PictureUpload></PictureUpload>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container xs={12} justify={\"center\"}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Password></Password>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\Password\\Password.js",["380"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport * as yup from \"yup\";\r\nimport { Button, Paper, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Title = styled.h3`\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  margin-top: 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 10px 10px 0px 10px;\r\n  width: calc(100% - 20px);\r\n`;\r\n\r\nconst validationSchema = yup.object({\r\n  newPassword: yup\r\n    .string(\"Enter your password\")\r\n    .min(6, \"Password should be of minimum 6 characters length\")\r\n    .required(\"Password is required\"),\r\n  repeatedPassword: yup\r\n    .string(\"Enter your password\")\r\n    // .oneOf([newPassword], 'Passwords are not the same!')\r\n    .required(\"Password is required\"),\r\n  currentPassword: yup\r\n    .string(\"Enter your current passowrd\")\r\n    .required(\"Current password is required\"),\r\n});\r\n\r\nconst Password = () => {\r\n  const formik = useFormik({\r\n    initialValues: {},\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n    },\r\n  });\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Title>Password:</Title>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div>\r\n          <StyledTextField\r\n            label=\"New password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"newPassword\"\r\n            value={formik.values.newPassword}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.newPassword && Boolean(formik.errors.newPassword)\r\n            }\r\n            helperText={formik.touched.newPassword && formik.errors.newPassword}\r\n          ></StyledTextField>\r\n          <StyledTextField\r\n            label=\"Repeated Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"repeatedPassword\"\r\n            value={formik.values.repeatedPassword}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.repeatedPassword &&\r\n              Boolean(formik.errors.repeatedPassword)\r\n            }\r\n            helperText={\r\n              formik.touched.repeatedPassword && formik.errors.repeatedPassword\r\n            }\r\n          ></StyledTextField>\r\n        </div>\r\n        <div>\r\n          <StyledTextField\r\n            label=\"Current password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"currentPassword\"\r\n            value={formik.values.currentPassword}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.currentPassword &&\r\n              Boolean(formik.errors.currentPassword)\r\n            }\r\n            helperText={\r\n              formik.touched.currentPassword && formik.errors.currentPassword\r\n            }\r\n          ></StyledTextField>\r\n        </div>\r\n        <StyledButton\r\n          autoFocus\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          UPDATE\r\n        </StyledButton>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\Information\\Information.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Account\\PictureUpload\\PictureUpload.js",["381","382","383","384","385","386","387","388"],"import { Button, Paper, TextField } from \"@material-ui/core\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport * as yup from \"yup\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../../../../services/auth-header\";\r\nimport { uploadPicture } from \"../../../../actions/AccountActions/accountActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst StyledImage = styled.img`\r\n  height: 500px;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n//https://www.youtube.com/watch?v=tYGTjxhzrqY\r\nconst validationSchema = yup.object().shape({\r\n  file: yup\r\n    .mixed()\r\n    .required(\"You need to provide a file\")\r\n    .test(\"size\", \"The file is too large\", (value) => {\r\n      return value && value.size <= 2000000;\r\n    })\r\n    .test(\"type\", \"We only support jpeg\", (value) => {\r\n      return value && value.type === \"image/jpeg\";\r\n    }),\r\n});\r\n\r\nconst PictureUpload = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <StyledPaper>\r\n      <Formik\r\n        initialValues={{ file: null }}\r\n        onSubmit={(values) => {\r\n          dispatch(uploadPicture(values.file));\r\n        }}\r\n        validationSchema={validationSchema}\r\n        render={({ values, handleSubmit, setFieldValue, errors, touched }) => {\r\n          return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  id=\"file\"\r\n                  name=\"file\"\r\n                  type=\"file\"\r\n                  onChange={(event) => {\r\n                    setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                  }}\r\n                  className=\"form-control\"\r\n                />\r\n                <p>{errors.file}</p>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                submit\r\n              </button>\r\n            </form>\r\n          );\r\n        }}\r\n      />\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default PictureUpload;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\engineerSidebarActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\technicalProjectManagerSidebarActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackages.js",["389"],"import { Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Workpackage from \"./Workpackage/Workpackage\";\r\nimport { getWorkPackages } from \"../../../../actions/TechnicalProjectManagerActions/workpackagesActions\";\r\nimport WorkpackageAdd from \"./WorkpackageAdd/WorkpackageAdd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createWorkpackage,\r\n  deleteWorkpackage,\r\n  editWorkpackage,\r\n} from \"../../../../actions/TechnicalProjectManagerActions/workpackagesActions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWorkPackageBackground = styled.div`\r\n  display: flex;\r\n  background-color: #303133;\r\n  width: 100%;\r\n  min-height: calc(100vh - 58px);\r\n  justify-content: center;\r\n  color: #efefef;\r\n`;\r\n\r\nconst StyledWorkPackageContainer = styled.div`\r\n  margin: 10px 0 0 0;\r\n  padding: 10px;\r\n  display: flex;\r\n  width: 80%;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledWorkPackageHeader = styled.div`\r\n  background-color: #1d1d1f;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & > button {\r\n    position: absolute;\r\n    left: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledWorkPackageTitle = styled.h2`\r\n  padding: 10px;\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Workpackages = () => {\r\n  const workpackages = useSelector(\r\n    (state) => state.technicalProjectManager.workpackages\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [isWorkPackageAddOpen, setIsWorkPackageAddOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getWorkPackages());\r\n  }, []);\r\n\r\n  const handleAddWorkPackageOpen = () => {\r\n    setIsWorkPackageAddOpen(true);\r\n  };\r\n  const handleAddWorkPackageClose = () => {\r\n    setIsWorkPackageAddOpen(false);\r\n  };\r\n\r\n  const addWorkpackage = (workpackage) => {\r\n    dispatch(createWorkpackage(workpackage));\r\n  };\r\n\r\n  const handleWorkpackageDelete = (id) => {\r\n    dispatch(deleteWorkpackage(id));\r\n  };\r\n\r\n  const handleWorkpackageEdit = (id, workpackage) => {\r\n    dispatch(editWorkpackage(id, workpackage));\r\n  };\r\n\r\n  return (\r\n    <StyledWorkPackageBackground>\r\n      <StyledWorkPackageContainer>\r\n        <StyledWorkPackageHeader>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={handleAddWorkPackageOpen}\r\n          >\r\n            Add new Workpackage\r\n          </Button>\r\n          <WorkpackageAdd\r\n            isWorkPackageAddOpen={isWorkPackageAddOpen}\r\n            handleAddWorkPackageClose={handleAddWorkPackageClose}\r\n            addWorkPackage={addWorkpackage}\r\n          />\r\n\r\n          <StyledWorkPackageTitle>Workpackages</StyledWorkPackageTitle>\r\n        </StyledWorkPackageHeader>\r\n        <div>\r\n          {workpackages.map((workpackage) => (\r\n            <Workpackage\r\n              id={workpackage.id}\r\n              name={workpackage.name}\r\n              status={workpackage.status * 100 + \"%\"}\r\n              tasksQuantity={workpackage.tasksQuantity}\r\n              finishedTasks={workpackage.finishedTasks}\r\n              deadline={workpackage.deadline}\r\n              predictedFinish={workpackage.predictedFinish}\r\n              description={workpackage.description}\r\n              handleWorkpackageDelete={handleWorkpackageDelete}\r\n              handleWorkpackageEdit={handleWorkpackageEdit}\r\n            />\r\n          ))}\r\n        </div>\r\n      </StyledWorkPackageContainer>\r\n    </StyledWorkPackageBackground>\r\n  );\r\n};\r\n\r\nexport default Workpackages;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Tasks.js",["390","391","392"],"import React, { useEffect, useState } from \"react\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  ChangeTaskStatusAction,\r\n  getCurrentWeekWithTasks,\r\n  getNextWeekWithTasks,\r\n  getPreviousWeekWithTasks,\r\n  setTaskDoneAction,\r\n  setTaskOnHold,\r\n} from \"../../../../actions/EngineerActions/tasksActions\";\r\nimport Day from \"./Day/Day\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBackground = styled.div`\r\n  display: flex;\r\n  min-height: inherit;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #efefef;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 80vw;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledWeekNumber = styled.h2`\r\n  margin-bottom: 35px;\r\n  background-color: #1d1d1f;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 20px;\r\n\r\n  & > b {\r\n    color: #b0b0b0;\r\n    font-weight: bolder;\r\n  }\r\n`;\r\n\r\nconst StyledWeekContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StyledNavigateArrow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & > .MuiSvgIcon-root {\r\n    height: 100px;\r\n    width: auto;\r\n    transition: transform 0.2s ease-in;\r\n  }\r\n\r\n  & > .MuiSvgIcon-root:hover {\r\n    height: 100px;\r\n    width: auto;\r\n    color: #b0b0b0;\r\n    transform: scale(1.07);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Tasks = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const schedule = useSelector((state) => state.engineer.schedule);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentWeekWithTasks());\r\n  }, []);\r\n\r\n  const handleGetNextWeek = () => {\r\n    dispatch(getNextWeekWithTasks(schedule.weekNumber, schedule.yearNumber));\r\n  };\r\n\r\n  const handleGetPreviousWeek = () => {\r\n    dispatch(\r\n      getPreviousWeekWithTasks(schedule.weekNumber, schedule.yearNumber)\r\n    );\r\n  };\r\n\r\n  const setDoneStatus = (dayId, taskId) => {\r\n    dispatch(setTaskDoneAction(dayId, taskId));\r\n  };\r\n\r\n  const setOnHoldStatus = (dayId, taskId) => {\r\n    dispatch(setTaskOnHold(dayId, taskId));\r\n  };\r\n\r\n  const setNewStatus = (dayId, taskId, status) => {\r\n    dispatch(ChangeTaskStatusAction(dayId, taskId, status));\r\n  };\r\n\r\n  const actions = {\r\n    handleSetDoneStatus: (dayId, taskId) => setDoneStatus(dayId, taskId),\r\n    handleOnHoldStatus: (dayId, taskId) => setOnHoldStatus(dayId, taskId),\r\n    handleChangeStatus: (dayId, taskId, status) =>\r\n      setNewStatus(dayId, taskId, status),\r\n  };\r\n\r\n  // actions.setDoneStatus();\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <StyledContainer>\r\n        <StyledWeekNumber>\r\n          <b>Week</b> - {schedule.weekNumber}\r\n          <b> Year</b> - {schedule.yearNumber}\r\n        </StyledWeekNumber>\r\n        <StyledWeekContainer>\r\n          <StyledNavigateArrow>\r\n            <NavigateBeforeIcon\r\n              onClick={handleGetPreviousWeek}\r\n            ></NavigateBeforeIcon>\r\n          </StyledNavigateArrow>\r\n          {schedule.days?.map((day) => (\r\n            <Day\r\n              dayId={day.id}\r\n              dayName={day.dayName}\r\n              date={day.date}\r\n              tasks={day.tasks}\r\n              actions={actions}\r\n              key={day.id}\r\n            ></Day>\r\n          ))}\r\n          <StyledNavigateArrow>\r\n            <NavigateNextIcon onClick={handleGetNextWeek}></NavigateNextIcon>\r\n          </StyledNavigateArrow>\r\n        </StyledWeekContainer>\r\n      </StyledContainer>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\leadEngineerSidebarActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackages.js",["393","394"],"import React, { useEffect, useState } from \"react\";\r\nimport Workpackage from \"./Workpackage/Workpackage\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getWorkPackagesForLeadEngineer } from \"../../../../actions/LeadEngineerActions/workpackageActions\";\r\n\r\nconst StyledWorkpackagesBackground = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  color: #efefef;\r\n`;\r\n\r\nconst StyledWorkpackagesContainer = styled.div`\r\n  width: 60vw;\r\n  margin-top: 10px;\r\n  min-height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledWorkpackagesHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  padding: 10px 0;\r\n  background-color: #262729;\r\n`;\r\n\r\nconst Workpackages = () => {\r\n  const workpackages = useSelector((state) => state.leadEngineer.workpackages);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getWorkPackagesForLeadEngineer());\r\n  }, []);\r\n\r\n  return (\r\n    <StyledWorkpackagesBackground>\r\n      <StyledWorkpackagesContainer>\r\n        <StyledWorkpackagesHeader>\r\n          <h2>Workpackages</h2>\r\n        </StyledWorkpackagesHeader>\r\n        {workpackages.map((workpackage) => {\r\n          const {\r\n            id,\r\n            name,\r\n            tasksQuantity,\r\n            finishedTasks,\r\n            status,\r\n            deadline,\r\n            predictedFinish,\r\n            description,\r\n            tasks,\r\n          } = workpackage;\r\n          return (\r\n            <Workpackage\r\n              id={id}\r\n              status={status}\r\n              name={name}\r\n              tasksQuantity={tasksQuantity}\r\n              finishedTasks={finishedTasks}\r\n              deadline={deadline}\r\n              predictedFinish={predictedFinish}\r\n              description={description}\r\n              tasks={tasks}\r\n            ></Workpackage>\r\n          );\r\n        })}\r\n      </StyledWorkpackagesContainer>\r\n    </StyledWorkpackagesBackground>\r\n  );\r\n};\r\n\r\nexport default Workpackages;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\teamLeaderSidebarActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\AssignTasks.js",["395","396","397"],"import React, { useEffect, useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { uuid } from \"uuidv4\";\r\nimport TasksColumn from \"./TasksRow/TasksColumn/TasksColumn\";\r\nimport TasksRow from \"./TasksRow/TasksRow\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport styled from \"styled-components\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getColumns,\r\n  setNewColumnForTasks,\r\n} from \"../../../../actions/TeamLeaderActions/assignTasksActions\";\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)`\r\n  margin: 10px 0 0 10px;\r\n`;\r\n\r\nconst StyledMainContainer = styled.main`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledUnassignedTasksContainer = styled(Paper)`\r\n  margin: 10px;\r\n  height: 100%;\r\n  width: 15%;\r\n`;\r\n\r\nconst StyledEngineersContainer = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 300px);\r\n\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledTest = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n`;\r\n\r\nconst AssignTasks = () => {\r\n  const columnsFromSelector = useSelector((state) => state.teamLeader.columns);\r\n  const columns = JSON.parse(JSON.stringify(columnsFromSelector));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getColumns());\r\n  }, []);\r\n\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    dispatch(setNewColumnForTasks(source, destination, columns));\r\n  };\r\n\r\n  const [formats, setFormats] = useState(() => [\r\n    \"showUnassigneTasks\",\r\n    \"showEngineerProfile\",\r\n  ]);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\r\n      <StyledTest>\r\n        <StyledToggleButtonGroup\r\n          value={formats}\r\n          onChange={handleFormat}\r\n          aria-label=\"text formatting\"\r\n        >\r\n          <ToggleButton value=\"showUnassigneTasks\" aria-label=\"bold\">\r\n            Show unassgined tasks\r\n          </ToggleButton>\r\n          <ToggleButton value=\"showEngineerProfile\" aria-label=\"italic\">\r\n            Show engineer profile\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n\r\n        <StyledMainContainer>\r\n          {formats.find((element) => element === \"showUnassigneTasks\") && (\r\n            // <StyledUnassignedTasksContainer>\r\n            <TasksColumn\r\n              columnId={\"unassignedTasks\"}\r\n              tasks={columns?.unassignedTasks}\r\n              dayName={\"unassigned tasks\"}\r\n              isUnassignedTasks={true}\r\n            />\r\n            // </StyledUnassignedTasksContainer>\r\n          )}\r\n          <StyledEngineersContainer>\r\n            {columns.engineers?.map((engineer) => {\r\n              return (\r\n                <TasksRow\r\n                  key={engineer.id}\r\n                  engineer={engineer}\r\n                  isProfileOpen={formats.find(\r\n                    (element) => element === \"showEngineerProfile\"\r\n                  )}\r\n                />\r\n              );\r\n            })}\r\n          </StyledEngineersContainer>\r\n        </StyledMainContainer>\r\n      </StyledTest>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default AssignTasks;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackage\\Workpackage.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\WorkpackageAdd\\WorkpackageAdd.js",["398","399","400","401"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  TextareaAutosize,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styled from \"styled-components\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLeadEngineers } from \"../../../../../actions/TechnicalProjectManagerActions/workpackagesActions\";\r\n\r\nconst StyledTextArea = styled(TextField)`\r\n  & .MuiInputBase-root {\r\n    height: 8rem;\r\n  }\r\n\r\n  & .MuiInputBase-input {\r\n    height: 6rem;\r\n  }\r\n`;\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string(\"Enter your name\")\r\n    .min(5, \"Name should be of minimum 5 characters length\")\r\n    .required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter workpackage description\")\r\n    .min(10, \"Description should be of minimum 10 characters length\")\r\n    .required(\"Description is required\"),\r\n  leadEngineerUsername: yup\r\n    .string(\"Choose lead engineer\")\r\n    .required(\"Lead engineer is required\"),\r\n  teamName: yup.string(\"Choose team\").required(\"Team is required\"),\r\n  deadline: yup.date(\"Enter date format\").required(\"Team is required\"),\r\n});\r\n\r\nconst teams = [\"DLSC1\"];\r\n\r\nconst WorkpackageAdd = ({\r\n  isWorkPackageAddOpen,\r\n  handleAddWorkPackageClose,\r\n  addWorkPackage,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const leadEngineers = useSelector(\r\n    (state) => state.technicalProjectManager.leadEngineers\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getLeadEngineers());\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {},\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      addWorkPackage(values);\r\n\r\n      handleAddWorkPackageClose();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleAddWorkPackageClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      disableBackdropClick\r\n      open={isWorkPackageAddOpen}\r\n    >\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleAddWorkPackageClose}\r\n        >\r\n          Add new work package\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <TextField\r\n            fullWidth\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"name\"\r\n            type=\"text\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n\r\n          <StyledTextArea\r\n            fullWidth\r\n            id=\"description\"\r\n            name=\"description\"\r\n            label=\"description\"\r\n            type=\"textarea\"\r\n            multiline\r\n            rows={5}\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.description && Boolean(formik.errors.description)\r\n            }\r\n            helperText={formik.touched.description && formik.errors.description}\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"lead-engineer\">Lead Engineer</InputLabel>\r\n            <Select\r\n              labelId=\"lead-engineer\"\r\n              label=\"Lead Engineer\"\r\n              name=\"leadEngineerUsername\"\r\n              value={formik.values.leadEngineerUsername}\r\n              fullWidth\r\n              onChange={formik.handleChange}\r\n            >\r\n              {leadEngineers.map((leadEngineer) => {\r\n                return (\r\n                  <MenuItem value={leadEngineer.username}>\r\n                    {`${leadEngineer.name} ${leadEngineer.surname}`}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n            {formik.touched.leadEngineerUsername &&\r\n              Boolean(formik.errors.leadEngineerUsername) && (\r\n                <FormHelperText>\r\n                  {formik.touched.leadEngineerUsername}\r\n                </FormHelperText>\r\n              )}\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"team\">Team</InputLabel>\r\n            <Select\r\n              labelId=\"teamName\"\r\n              label=\"teamName\"\r\n              name=\"teamName\"\r\n              value={formik.values.teamName}\r\n              fullWidth\r\n              onChange={formik.handleChange}\r\n            >\r\n              {teams.map((team) => {\r\n                return <MenuItem value={team}>{team}</MenuItem>;\r\n              })}\r\n              {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n            </Select>\r\n            {formik.touched.teamName && Boolean(formik.errors.teamName) && (\r\n              <FormHelperText>{formik.touched.teamName}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              id=\"deadline\"\r\n              label=\"deadline\"\r\n              type=\"date\"\r\n              value={formik.values.deadline}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={formik.handleChange}\r\n            />\r\n            {formik.touched.deadline && Boolean(formik.errors.deadline) && (\r\n              <FormHelperText>{formik.touched.deadline}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAddWorkPackageClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button autoFocus type=\"submit\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkpackageAdd;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Day.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\TasksRow.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Workpackage.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\TasksColumn\\TasksColumn.js",["402"],"import { Card, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Task from \"./Task/Task\";\r\n\r\nconst StyledColumn = styled(Card)`\r\n  margin: 0 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  padding: 10px;\r\n  /* width: 100%; */\r\n  width: ${(props) => (props.isUnassignedTasks ? \"300px\" : \"100%\")};\r\n  height: ${(props) => (props.isUnassignedTasks ? \"80vh\" : \"40vh\")};\r\n\r\n  & > h3 {\r\n    text-align: center;\r\n    padding: 10px;\r\n    border-bottom: solid 1px white;\r\n  }\r\n`;\r\n\r\nconst StyledDroppableContainer = styled.div`\r\n  background-color: ${(props) => (props.isDraggingOver ? \"silver\" : \"#424242\")};\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst calculateTotalHoursInColumn = (tasks) => {\r\n  let counter = 0;\r\n  tasks?.forEach((task) => (counter += task?.duration));\r\n  return counter;\r\n};\r\n\r\nconst TasksColumn = ({ columnId, dayName, tasks, isUnassignedTasks }) => {\r\n  return (\r\n    <Droppable droppableId={columnId} key={columnId}>\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <StyledColumn isUnassignedTasks={isUnassignedTasks}>\r\n            <h3>{`${dayName} | ${calculateTotalHoursInColumn(tasks)}h`}</h3>\r\n            <StyledDroppableContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              {tasks?.map((task, index) => {\r\n                return (\r\n                  <Draggable\r\n                    key={task.id}\r\n                    draggableId={\"task_\" + task.id}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => {\r\n                      return (\r\n                        <Task\r\n                          id={task.id}\r\n                          provided={provided}\r\n                          snapshot={snapshot}\r\n                          name={task.name}\r\n                          duration={task.duration}\r\n                        ></Task>\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </StyledDroppableContainer>\r\n          </StyledColumn>\r\n        );\r\n      }}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default TasksColumn;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackage\\WorkpackageDetails\\WorkpackageDetails.js",["403"],"import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst StyledDialog = styled(Dialog)`\r\n  & .MuiDialog-paperWidthSm {\r\n    width: 900px;\r\n  }\r\n`;\r\n\r\nconst StyledTableContainer = styled(TableContainer)`\r\n  max-height: 600px;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledTableRow = styled(TableRow)`\r\n  & .MuiTableCell-stickyHeader {\r\n    background-color: #262729;\r\n    color: #c0c0c0;\r\n  }\r\n`;\r\n\r\nconst StyledTask = styled(TableRow)`\r\n  background-color: #1e1f21;\r\n\r\n  & td {\r\n    background-color: #1e1f21;\r\n    color: #93c5fd;\r\n  }\r\n`;\r\n\r\nconst WorkpackageDetails = ({\r\n  handleWorkpackageDetailsClose,\r\n  isWorkpackageDetailsOpen,\r\n  id,\r\n}) => {\r\n  const workpackages = useSelector((state) =>\r\n    state.technicalProjectManager.workpackages.find(\r\n      (workpackage) => workpackage.id === id\r\n    )\r\n  );\r\n\r\n  return (\r\n    <StyledDialog\r\n      onClose={handleWorkpackageDetailsClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={isWorkpackageDetailsOpen}\r\n    >\r\n      <DialogTitle\r\n        id=\"customized-dialog-title\"\r\n        onClose={handleWorkpackageDetailsClose}\r\n      >\r\n        Tasks Status\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <StyledTableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <StyledTableRow>\r\n                <TableCell>Id:</TableCell>\r\n                <TableCell>Name:</TableCell>\r\n                <TableCell>Duration:</TableCell>\r\n                <TableCell>Status:</TableCell>\r\n                <TableCell>Engineer:</TableCell>\r\n                <TableCell>Planned at:</TableCell>\r\n              </StyledTableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {workpackages?.tasks.map((task, index) => {\r\n                return (\r\n                  <StyledTask role=\"checkbox\" tabIndex={-1} key={id}>\r\n                    <TableCell>{index + 1}</TableCell>\r\n                    <TableCell>{task.name}</TableCell>\r\n                    <TableCell>{task.duration}h</TableCell>\r\n                    <TableCell>{task.status * 100}%</TableCell>\r\n                    <TableCell>{task.assignedEngineerName}</TableCell>\r\n                    <TableCell>{task.plannedAt}</TableCell>\r\n                  </StyledTask>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </StyledTableContainer>\r\n      </DialogContent>\r\n    </StyledDialog>\r\n  );\r\n};\r\n\r\nexport default WorkpackageDetails;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\EngineerDetails\\EngineerDetails.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Task.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\TaskAdd\\TaskAdd.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\AssignTasks\\TasksRow\\TasksColumn\\Task\\Task.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Tasks.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Workpackages\\Workpackage\\WorkpackageEdit\\WorkpackageEdit.js",["404","405","406"],"import {\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  MenuItem,\r\n  TextareaAutosize,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {} from \"@material-ui/core\";\r\nimport { getLeadEngineers } from \"../../../../../../actions/TechnicalProjectManagerActions/workpackagesActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string(\"Enter your name\")\r\n    .min(5, \"Name should be of minimum 5 characters length\")\r\n    .required(\"Name is required\"),\r\n  description: yup\r\n    .string(\"Enter workpackage description\")\r\n    .min(10, \"Description should be of minimum 10 characters length\")\r\n    .required(\"Description is required\"),\r\n  leadEngineerUsername: yup\r\n    .string(\"Choose lead engineer\")\r\n    .required(\"Lead engineer is required\"),\r\n  teamName: yup.string(\"Choose team\").required(\"Team is required\"),\r\n  deadline: yup.date(\"Enter date format\").required(\"Team is required\"),\r\n});\r\n\r\nconst StyledTextArea = styled(TextField)`\r\n  & .MuiInputBase-root {\r\n    height: 8rem;\r\n  }\r\n`;\r\n\r\nconst teams = [\"DLSC1\"];\r\n\r\nconst WorkpackageEdit = ({\r\n  handleWorkpackageEditClose,\r\n  handleWorkpackageEdit,\r\n  isWorkpackageEditOpen,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const leadEngineers = useSelector(\r\n    (state) => state.technicalProjectManager.leadEngineers\r\n  );\r\n  const workpackage = useSelector((state) =>\r\n    state.technicalProjectManager.workpackages.find(\r\n      (workpackage) => workpackage.id === id\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getLeadEngineers());\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: workpackage?.name,\r\n      description: workpackage?.description,\r\n      leadEngineerUsername: workpackage?.leadEngineerUsername,\r\n      teamName: \"DLSC1\",\r\n      deadline: workpackage?.deadline,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      // console.log(...workpackages);\r\n      handleWorkpackageEditClose();\r\n      handleWorkpackageEdit(id, values);\r\n    },\r\n  });\r\n  return (\r\n    <Dialog\r\n      onClose={handleWorkpackageEditClose}\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      disableBackdropClick\r\n      open={isWorkpackageEditOpen}\r\n    >\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleWorkpackageEditClose}\r\n        >\r\n          Edit work package\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <TextField\r\n            fullWidth\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"name\"\r\n            type=\"text\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n\r\n          <StyledTextArea\r\n            fullWidth\r\n            id=\"description\"\r\n            name=\"description\"\r\n            label=\"description\"\r\n            type=\"textarea\"\r\n            multiline\r\n            rows={5}\r\n            value={formik.values.description}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.description && Boolean(formik.errors.description)\r\n            }\r\n            helperText={formik.touched.description && formik.errors.description}\r\n          />\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"lead-engineer\">Lead Engineer</InputLabel>\r\n            <Select\r\n              labelId=\"lead-engineer\"\r\n              label=\"Lead Engineer\"\r\n              name=\"leadEngineerUsername\"\r\n              value={formik.values.leadEngineerUsername}\r\n              fullWidth\r\n              onChange={formik.handleChange}\r\n            >\r\n              {leadEngineers.map((leadEngineer) => {\r\n                return (\r\n                  <MenuItem value={leadEngineer.username}>\r\n                    {`${leadEngineer.name} ${leadEngineer.surname}`}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n            {formik.touched.leadEngineerUsername &&\r\n              Boolean(formik.errors.leadEngineerUsername) && (\r\n                <FormHelperText>\r\n                  {formik.touched.leadEngineerUsername}\r\n                </FormHelperText>\r\n              )}\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"team\">Team</InputLabel>\r\n            <Select\r\n              labelId=\"teamName\"\r\n              label=\"teamName\"\r\n              name=\"teamName\"\r\n              value={formik.values.teamName}\r\n              fullWidth\r\n              onChange={formik.handleChange}\r\n            >\r\n              {teams.map((team) => {\r\n                return <MenuItem value={team}>{team}</MenuItem>;\r\n              })}\r\n            </Select>\r\n            {formik.touched.teamName && Boolean(formik.errors.teamName) && (\r\n              <FormHelperText>{formik.touched.teamName}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              id=\"deadline\"\r\n              label=\"deadline\"\r\n              type=\"date\"\r\n              value={formik.values.deadline}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              onChange={formik.handleChange}\r\n            />\r\n            {formik.touched.deadline && Boolean(formik.errors.deadline) && (\r\n              <FormHelperText>{formik.touched.deadline}</FormHelperText>\r\n            )}\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleWorkpackageEditClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button autoFocus type=\"submit\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkpackageEdit;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Action\\TaskStatusEdit.js",[],["407","408"],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Action\\TaskDetails.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Tasks\\Day\\Task\\Action\\Action.js",["409"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst StyledTaskAction = styled.div`\r\n  color: #93c5fd;\r\n  & > .MuiSvgIcon-root {\r\n    height: 20px;\r\n    color: #93c5fd;\r\n    transition: transform 0.2s ease-in;\r\n  }\r\n\r\n  &:hover > .MuiSvgIcon-root {\r\n    color: #3d94f8;\r\n    transform: scale(1.57);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Action = ({ Icon, tooltip, action }) => {\r\n  return (\r\n    <div className=\"engineer tasks action\">\r\n      <Tooltip title={tooltip} onClick={() => action()}>\r\n        <Icon></Icon>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Action;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\Task.js",["410"],"import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  TableCell,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport TaskEdit from \"./TaskEdit/TaskEdit\";\r\nimport TaskDetails from \"./TaskDetails/TaskDetails\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTask = styled(TableRow)`\r\n  background-color: #1e1f21;\r\n\r\n  & td {\r\n    background-color: #1e1f21;\r\n    color: #93c5fd;\r\n  }\r\n`;\r\n\r\nconst StyledTaskActions = styled(TableCell)`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  & > button {\r\n    color: #93c5fd;\r\n  }\r\n`;\r\n\r\nconst Task = ({\r\n  name,\r\n  duration,\r\n  status,\r\n  description,\r\n  id,\r\n  plannedAt,\r\n  assignedEngineerName,\r\n  handleTaskDelete,\r\n  handleTaskEdit,\r\n}) => {\r\n  const [isTaskEditOpen, setIsTaskEditOpen] = useState(false);\r\n  const [isTaskDetailsOpen, setIsTaskDetailsOpen] = useState(false);\r\n\r\n  const handleTaskEditOpen = () => {\r\n    setIsTaskEditOpen(true);\r\n  };\r\n\r\n  const handleTaskEditClose = () => {\r\n    setIsTaskEditOpen(false);\r\n  };\r\n\r\n  const handleTaskDetailsOpen = () => {\r\n    setIsTaskDetailsOpen(true);\r\n  };\r\n\r\n  const handleTaskDetailsClose = () => {\r\n    setIsTaskDetailsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <StyledTask role=\"checkbox\" tabIndex={-1} key={id}>\r\n      <TableCell>{name}</TableCell>\r\n      <TableCell>{duration}h</TableCell>\r\n      <TableCell>{status * 100}%</TableCell>\r\n      <StyledTaskActions>\r\n        <Tooltip title=\"Task Details\" onClick={handleTaskDetailsOpen}>\r\n          <IconButton aria-label=\"task details\">\r\n            <AssignmentIcon></AssignmentIcon>\r\n          </IconButton>\r\n        </Tooltip>\r\n        <TaskDetails\r\n          isTaskDetailsOpen={isTaskDetailsOpen}\r\n          handleTaskDetailsClose={handleTaskDetailsClose}\r\n          plannedAt={plannedAt}\r\n          assignedEngineerName={assignedEngineerName}\r\n          description={description}\r\n        ></TaskDetails>\r\n\r\n        <Tooltip title=\"Task Edit\">\r\n          <IconButton aria-label=\"Task Edit\" onClick={handleTaskEditOpen}>\r\n            <EditIcon></EditIcon>\r\n          </IconButton>\r\n        </Tooltip>\r\n        <TaskEdit\r\n          isTaskEditOpen={isTaskEditOpen}\r\n          handleTaskEditClose={handleTaskEditClose}\r\n          name={name}\r\n          duration={duration}\r\n          description={description}\r\n          id={id}\r\n          handleTaskEdit={handleTaskEdit}\r\n        ></TaskEdit>\r\n        <Tooltip title=\"Task Delete\">\r\n          <IconButton\r\n            aria-label=\"Task Delete\"\r\n            onClick={() => handleTaskDelete(id)}\r\n          >\r\n            <DeleteForeverIcon></DeleteForeverIcon>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </StyledTaskActions>\r\n    </StyledTask>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskEdit\\TaskEdit.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Workpackages\\Workpackage\\Tasks\\Task\\TaskDetails\\TaskDetails.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\EngineerBoard.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js",["411","412"],"import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { getUserTasks } from \"../../../../../../actions/EngineerActions/boardActions\";\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 100%;\r\n\r\n  & > h3 {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledListOfTasks = styled.ul`\r\n  height: 400px;\r\n  overflow-y: scroll;\r\n  /* display: flex; */\r\n  /* flex-direction: column; */\r\n  /* justify-content: space-evenly; */\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  & > li {\r\n    background-color: #414244;\r\n    color: white;\r\n    position: relative;\r\n    margin: 10px 0;\r\n    height: 100px;\r\n    list-style: none;\r\n    width: 100%;\r\n    font-weight: 700;\r\n\r\n    & > div {\r\n      position: absolute;\r\n      background-color: #bb432c;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p {\r\n      top: 25%;\r\n      padding: 10px;\r\n      width: 60%;\r\n      position: absolute;\r\n    }\r\n\r\n    & > p:last-child {\r\n      text-align: end;\r\n      position: absolute;\r\n      right: 0;\r\n      padding: 10px;\r\n      width: 40%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst getClosestWorkingDay = () => {\r\n  if (moment(Date.now()).isoWeekday() === 6)\r\n    return moment(Date.now()).subtract(1, \"days\").format(\"LL\");\r\n  if (moment(Date.now()).isoWeekday() === 7)\r\n    return moment(Date.now()).subtract(2, \"days\").format(\"LL\");\r\n\r\n  return moment(Date.now()).format(\"LL\");\r\n};\r\n\r\nconst UsefulInformationsLeft = () => {\r\n  const contentInfo = useSelector((state) => state.engineer.userInfo);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserTasks());\r\n  }, []);\r\n\r\n  return (\r\n    <StyledContainer>\r\n      {loading && (\r\n        <CircularProgress color=\"primary\" size={100}></CircularProgress>\r\n      )}\r\n      {!loading && (\r\n        <>\r\n          <h3>{`Tasks for ${getClosestWorkingDay()}`}</h3>\r\n          <StyledListOfTasks>\r\n            {contentInfo.currentTasks?.map((task) => (\r\n              <li>\r\n                <div style={{ width: `${task.status * 100}%` }}></div>\r\n\r\n                <p>{task.name}</p>\r\n                <p>\r\n                  {`Estimated time: \r\n              ${task.estimatedTime}`}\r\n                </p>\r\n              </li>\r\n            ))}\r\n          </StyledListOfTasks>\r\n        </>\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationsLeft;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js",["413","414"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport { getGraphDetails } from \"../../../../../../actions/EngineerActions/boardActions\";\r\n\r\nconst StyledDoughnutContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > h3 {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n  }\r\n  & > div {\r\n    align-self: center;\r\n    width: 80%;\r\n    height: 80%;\r\n    min-height: 300px;\r\n  }\r\n`;\r\n\r\nconst UsefulInformationRight = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const statusOfWorkInCurrentWeek = useSelector(\r\n    (state) => state.engineer.statusOfWorkInCurrentWeek\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getGraphDetails()).finally(setLoading(false));\r\n  }, []);\r\n  return (\r\n    <StyledDoughnutContainer>\r\n      <h3>{`Work in CW${moment(Date.now()).isoWeek()}`}</h3>\r\n      <div>\r\n        <Doughnut\r\n          data={{\r\n            labels: [\"Planned\", \"Unassigned\", \"Overwork hours\"],\r\n            datasets: [\r\n              {\r\n                data: statusOfWorkInCurrentWeek,\r\n                backgroundColor: [\"green\", \"gray\", \"red\"],\r\n              },\r\n            ],\r\n          }}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n          options={{ maintainAspectRatio: false }}\r\n        ></Doughnut>\r\n      </div>\r\n    </StyledDoughnutContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationRight;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Header\\Header.js",["415"],"import { Button, IconButton } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState } from \"react\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n  background-color: #27272a;\r\n  color: #fff;\r\n  width: 100%;\r\n  min-height: 58px;\r\n`;\r\n\r\nconst StyledPlug = styled.header`\r\n  width: 48px;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledHeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n  transform: ${(props) =>\r\n    props.isDrawerOpen ? \"translateX(160px)\" : \"translateX(0px)\"};\r\n`;\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  color: white;\r\n  &:hover {\r\n    background-color: #c0c0c0;\r\n  }\r\n`;\r\n\r\nconst StyledHeaderTitle = styled.div`\r\n  & > h1 {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst StyledHeaderIcons = styled.div`\r\n  margin-right: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledAppsIcon = styled(AppsIcon)`\r\n  margin-right: 8px;\r\n  object-fit: contain;\r\n  height: 30px;\r\n  width: 30px;\r\n`;\r\n\r\nconst StyledNotificationsIcon = styled(NotificationsIcon)`\r\n  margin-right: 8px;\r\n  object-fit: contain;\r\n  height: 30px;\r\n  width: 30px;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  margin-right: 8px;\r\n  object-fit: contain;\r\n  height: 30px;\r\n  width: 30px;\r\n`;\r\n\r\nconst Header = ({ handleDrawerOpen, isDrawerOpen, handleLogOut }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <StyledHeaderLeft isDrawerOpen={isDrawerOpen}>\r\n        {!isDrawerOpen && (\r\n          <StyledIconButton onClick={handleDrawerOpen}>\r\n            <MenuIcon></MenuIcon>\r\n          </StyledIconButton>\r\n        )}\r\n        {isDrawerOpen && <StyledPlug></StyledPlug>}\r\n      </StyledHeaderLeft>\r\n      <StyledHeaderTitle>\r\n        <h1>First Time Right On Time</h1>\r\n      </StyledHeaderTitle>\r\n      <StyledHeaderIcons>\r\n        <StyledAppsIcon></StyledAppsIcon>\r\n        <StyledNotificationsIcon></StyledNotificationsIcon>\r\n        <Link to=\"/account\">\r\n          <StyledAvatar src=\"https://yt3.ggpht.com/yti/ANoDKi6wK_UXTj-paYQq980Ia30B623dBP5hTFc9Fnsciw=s88-c-k-c0x00ffffff-no-rj-mo\"></StyledAvatar>\r\n        </Link>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>\r\n          Logout\r\n        </Button>\r\n      </StyledHeaderIcons>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Login\\Login.js",["416"],"import {\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  width: 900px;\r\n  height: 400px;\r\n  margin-top: -15vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  padding: 20px 10px;\r\n  width: 400px;\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledAlert = styled(Alert)`\r\n  margin: 10px 0;\r\n  width: 900px;\r\n`;\r\n\r\nconst StyledDetails = styled.div`\r\n  align-self: center;\r\n  width: 500px;\r\n\r\n  & > p {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  margin-top: 5px;\r\n  width: 100%;\r\n\r\n  & .MuiInputBase-root {\r\n    height: 50px;\r\n\r\n    & .MuiInputBase-input {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: ${(props) => (props.loginButton ? \"calc(100% - 20px)\" : \"60%\")};\r\n  margin: 5px 5px;\r\n  height: 50px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin: 10px 0;\r\n  text-decoration: none;\r\n  color: #efefef;\r\n`;\r\n\r\nconst StyledBackdrop = styled(Backdrop)`\r\n  z-index: 999;\r\n`;\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string(\"Enter your username\").required(\"Username is required\"),\r\n  password: yup.string(\"Enter your password\").required(\"Password is required\"),\r\n});\r\n\r\nconst Login = (values) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useSelector((state) => state.message.message);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = (username, password) => {\r\n    setLoading(true);\r\n\r\n    dispatch(login(username, password)).finally(() => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: \"\",\r\n      username: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      handleLogin(values.username, values.password);\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <StyledBackdrop open={loading}>\r\n        <CircularProgress color=\"primary\" size={200} />\r\n      </StyledBackdrop>\r\n      <StyledContainer>\r\n        {message && <StyledAlert severity=\"error\">{message}</StyledAlert>}\r\n        <StyledPaper>\r\n          <StyledDetails>\r\n            <h1>First time right on time</h1>\r\n            <p>\r\n              FTROT2 is a work management application at ZF that implements the\r\n              product engineering process from PEP guideline.\r\n            </p>\r\n          </StyledDetails>\r\n          <StyledForm onSubmit={formik.handleSubmit}>\r\n            <StyledTextField\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              autoComplete=\"none\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.username && Boolean(formik.errors.username)}\r\n              helperText={formik.touched.username && formik.errors.username}\r\n            ></StyledTextField>\r\n\r\n            <StyledTextField\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            ></StyledTextField>\r\n\r\n            <StyledButton\r\n              autoFocus\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              loginButton\r\n            >\r\n              Login\r\n            </StyledButton>\r\n            <Divider></Divider>\r\n            <StyledLink to=\"/recover-password\">\r\n              Do you remember the password?\r\n            </StyledLink>\r\n\r\n            <StyledButton autoFocus type=\"submit\" variant=\"contained\">\r\n              Create account\r\n            </StyledButton>\r\n          </StyledForm>\r\n        </StyledPaper>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Sidebar\\Sidebar.js",["417"],"import { Divider, Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledIconButton = styled(IconButton)`\r\n  margin: 5px 0 5px 20px;\r\n  padding: 10px;\r\n  width: 40px;\r\n  height: 40px;\r\n  color: #efefef;\r\n\r\n  &:hover {\r\n    background-color: rgb(239, 239, 239, 0.1);\r\n  }\r\n`;\r\nconst StyledDrawer = styled(Drawer)`\r\n  /* width: 700px; */\r\n`;\r\nconst StyledListItemIcon = styled(ListItem)`\r\n  margin: 0 20px 0 5px;\r\n  width: 10px;\r\n  color: #efefef;\r\n`;\r\n\r\nconst Sidebar = ({ isSidebarOpen, handleSidebarClose, actions }) => {\r\n  return (\r\n    <StyledDrawer anchor=\"left\" open={isSidebarOpen} variant=\"persistent\">\r\n      <StyledIconButton onClick={handleSidebarClose}>\r\n        <ChevronLeftIcon />\r\n      </StyledIconButton>\r\n      <Divider />\r\n      <List>\r\n        {actions.map((action, index) => {\r\n          return (\r\n            <ListItem\r\n              component={Link}\r\n              to={action.link}\r\n              button\r\n              key={action.name}\r\n            >\r\n              <StyledListItemIcon>\r\n                <action.icon />\r\n              </StyledListItemIcon>\r\n              <ListItemText primary={action.name} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </StyledDrawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Register\\Register.js",["418"],"import {\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  width: 400px;\r\n  height: 400px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  padding: 20px 10px;\r\n  width: 400px;\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  margin-top: 5px;\r\n  width: 100%;\r\n\r\n  & .MuiInputBase-root {\r\n    height: 50px;\r\n\r\n    & .MuiInputBase-input {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: calc(100% - 20px);\r\n  margin: 5px 5px;\r\n  height: 50px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledBackdrop = styled(Backdrop)`\r\n  z-index: 999;\r\n`;\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Please enter valid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n  confirmPassword: yup.string().when(\"password\", {\r\n    is: (val) => (val && val.length > 0 ? true : false),\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both password need to be the same\"),\r\n  }),\r\n});\r\nconst Register = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true);\r\n      setTimeout(() => setLoading(false), 3000);\r\n      console.log(values);\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <StyledBackdrop open={loading}>\r\n        <CircularProgress color=\"primary\" size={200} />\r\n      </StyledBackdrop>\r\n      <StyledContainer>\r\n        <StyledPaper>\r\n          <StyledForm onSubmit={formik.handleSubmit}>\r\n            <StyledTextField\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              autoComplete=\"none\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            ></StyledTextField>\r\n\r\n            <StyledTextField\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            ></StyledTextField>\r\n            <StyledTextField\r\n              label=\"Confirm password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              value={formik.values.confirmPassword}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.confirmPassword &&\r\n                Boolean(formik.errors.confirmPassword)\r\n              }\r\n              helperText={\r\n                formik.touched.confirmPassword && formik.errors.confirmPassword\r\n              }\r\n            ></StyledTextField>\r\n\r\n            <StyledButton\r\n              autoFocus\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Register\r\n            </StyledButton>\r\n          </StyledForm>\r\n        </StyledPaper>\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\Board.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\Engineer\\Board\\UserDetails\\UserDetails.js",["419","420","421"],"import { Avatar, CircularProgress, Grid, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getUserInfo } from \"../../../../../actions/EngineerActions/boardActions\";\r\n\r\nconst StyledGrid = styled(Grid)`\r\n  min-height: 90px;\r\n`;\r\n\r\nconst StyledInfoColumn = styled(Grid)`\r\n  font-size: 20px;\r\n  & b {\r\n    color: #b0b0b0;\r\n    font-weight: bolder;\r\n  }\r\n`;\r\n\r\nconst StyledGenericAvatar = styled(Avatar)`\r\n  height: 100px;\r\n  width: 100px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst UserDetails = () => {\r\n  const contentInfo = useSelector((state) => state.engineer.userInfo);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserInfo());\r\n  }, []);\r\n\r\n  return (\r\n    <StyledGrid container spacing={4} justify=\"space-between\">\r\n      {loading && <CircularProgress color=\"primary\" size={100} />}\r\n      {!loading && (\r\n        <>\r\n          <Grid item xs={4} md={1}>\r\n            {contentInfo.pictureUrl ? (\r\n              <img src={contentInfo.pictureUrl} alt=\"User\"></img>\r\n            ) : (\r\n              <StyledGenericAvatar variant=\"square\" />\r\n            )}\r\n            {/* <StyledGenericAvatar variant=\"square\" />\r\n            <img src={contentInfo.pictureUrl} alt=\"User\"></img> */}\r\n          </Grid>\r\n          <Grid item container xs={8} md={11} justify=\"space-around\">\r\n            <StyledInfoColumn\r\n              item\r\n              container\r\n              xs={12}\r\n              sm={6}\r\n              xl={3}\r\n              justify=\"flex-start\"\r\n              direction=\"column\"\r\n            >\r\n              <p>\r\n                <b>Name:</b> {contentInfo.name}\r\n              </p>\r\n              <p>\r\n                <b>Surname:</b> {contentInfo.surname}\r\n              </p>\r\n            </StyledInfoColumn>\r\n            <StyledInfoColumn\r\n              item\r\n              container\r\n              justify=\"flex-start\"\r\n              xs={12}\r\n              sm={6}\r\n              xl={3}\r\n              direction=\"column\"\r\n            >\r\n              <p>\r\n                <b>Team:</b> {contentInfo.team}\r\n              </p>\r\n              <p>\r\n                <b>Role:</b> {contentInfo.role}\r\n              </p>\r\n            </StyledInfoColumn>\r\n            <StyledInfoColumn\r\n              item\r\n              container\r\n              justify=\"flex-start\"\r\n              xs={12}\r\n              sm={6}\r\n              xl={3}\r\n              direction=\"column\"\r\n            >\r\n              <p>\r\n                <b>Rework ratio:</b> {contentInfo.reworkRatio * 100}%\r\n              </p>\r\n              <p>\r\n                <b>Unfinished tasks:</b> {contentInfo.unfinishedTasks}\r\n              </p>\r\n            </StyledInfoColumn>\r\n            <StyledInfoColumn\r\n              item\r\n              container\r\n              justify=\"flex-start\"\r\n              xs={12}\r\n              sm={6}\r\n              xl={3}\r\n              direction=\"column\"\r\n            >\r\n              <p>\r\n                <b>Supervisor:</b> {contentInfo.supervisor}\r\n              </p>\r\n              <p>\r\n                <b>Joined at:</b> {contentInfo.joinedAt}\r\n              </p>\r\n            </StyledInfoColumn>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </StyledGrid>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\UserDetails\\UserDetails.js",["422"],"import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background-color: #1d1d1f;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  & img {\r\n    object-fit: fill;\r\n    width: 100px;\r\n    border-radius: 10%;\r\n  }\r\n`;\r\n\r\nconst UserDetails = ({ Details }) => {\r\n  const contentInfo = useSelector((state) => state.engineer.userInfo);\r\n  return (\r\n    <StyledPaper>\r\n      <Details />\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\Diagrams\\Diagrams.js",["423"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { AppBar, Grid, Paper, Tab, Tabs } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  width: 100%;\r\n  height: 40vh;\r\n`;\r\n\r\nconst graphData = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Rework hours\",\r\n      fill: true,\r\n      backgroundColor: \"rgba(75,192,192,0.2)\",\r\n      borderColor: \"rgba(75,192,192,1)\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Diagrams = () => {\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const reworkHours = useSelector((state) => state.engineer.reworkHours);\r\n  const handleTabChange = (e, newValue) => {\r\n    setSelectedTab(newValue);\r\n  };\r\n  return (\r\n    <StyledPaper>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={selectedTab}\r\n          onChange={handleTabChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Rework hours\" />\r\n          <Tab label=\"Stopped tasks\" />\r\n          <Tab label=\"Other\" />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={selectedTab} index={0}>\r\n        <Line\r\n          data={{\r\n            ...graphData,\r\n            datasets: [\r\n              {\r\n                ...graphData.datasets[0],\r\n                data: reworkHours,\r\n              },\r\n            ],\r\n          }}\r\n          width={100}\r\n          height={50}\r\n          options={{ maintainAspectRatio: false }}\r\n        />\r\n      </TabPanel>\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default Diagrams;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\UsefulInformations\\UsefulInformations.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Layout\\Board\\Diagrams\\TabPanel.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\LeadEngineerBoard.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\UserDetails\\UserDetails.js",["424","425"],"import { Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getLeadEngineerInfo } from \"../../../../../actions/LeadEngineerActions/boardActions\";\r\n\r\nconst StyledInfoColumn = styled(Grid)`\r\n  font-size: 20px;\r\n  & b {\r\n    color: #b0b0b0;\r\n    font-weight: bolder;\r\n  }\r\n`;\r\n\r\nconst StyledGenericAvatar = styled(Avatar)`\r\n  height: 100px;\r\n  width: 100px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst UserDetails = () => {\r\n  const contentInfo = useSelector((state) => state.leadEngineer.userInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLeadEngineerInfo());\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={4} justify=\"space-between\">\r\n      <Grid item xs={4} md={1}>\r\n        {contentInfo.pictureUrl ? (\r\n          <img src={contentInfo.pictureUrl} alt=\"User\"></img>\r\n        ) : (\r\n          <StyledGenericAvatar variant=\"square\" />\r\n        )}\r\n      </Grid>\r\n      <Grid item container xs={8} md={11} justify=\"space-around\">\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          justify=\"flex-start\"\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Name:</b> {contentInfo.name}\r\n          </p>\r\n          <p>\r\n            <b>Surname:</b> {contentInfo.surname}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Team:</b> {contentInfo.joinedAt}\r\n          </p>\r\n          <p>\r\n            <b>Role:</b> {contentInfo.role}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Team:</b> {contentInfo.team}\r\n          </p>\r\n          <p>\r\n            <b>Supervisor:</b> {contentInfo.supervisor}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Finished workpackages:</b> {contentInfo.finishedWorkPackages}\r\n          </p>\r\n          <p>\r\n            <b>Unfinished workpackages:</b> {contentInfo.unfinishedWorkPackages}\r\n          </p>\r\n        </StyledInfoColumn>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js",["426"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getLeadEngineerWorkpackages } from \"../../../../../../actions/LeadEngineerActions/boardActions\";\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 100%;\r\n\r\n  & > h3 {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledListOfTasks = styled.ul`\r\n  height: 400px;\r\n  overflow-y: scroll;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  & > li {\r\n    background-color: #414244;\r\n    color: white;\r\n    position: relative;\r\n    margin: 10px 0;\r\n    height: 200px;\r\n    list-style: none;\r\n    width: 100%;\r\n    font-weight: 700;\r\n\r\n    & > div {\r\n      position: absolute;\r\n      background-color: #bb432c;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p {\r\n      position: absolute;\r\n      padding: 10px;\r\n      width: 60%;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p:last-child {\r\n      text-align: end;\r\n      position: absolute;\r\n      right: 0;\r\n      padding: 10px;\r\n      width: 40%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UsefulInformationsLeft = () => {\r\n  const contentInfo = useSelector((state) => state.leadEngineer.userInfo);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getLeadEngineerWorkpackages());\r\n  }, []);\r\n  return (\r\n    <StyledContainer>\r\n      <h3>Upcoming work packages</h3>\r\n      <StyledListOfTasks>\r\n        {contentInfo.workPackages.map((workPackage) => (\r\n          <li>\r\n            <div style={{ width: `${workPackage.status * 100}%` }}></div>\r\n\r\n            <p>{workPackage.name}</p>\r\n            <p>\r\n              {`Due to: \r\n              ${workPackage.deadline}`}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </StyledListOfTasks>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationsLeft;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\LeadEngineer\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js",["427"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport { getLeadEngineerWorkPackagesStatus } from \"../../../../../../actions/LeadEngineerActions/boardActions\";\r\n\r\nconst StyledDoughnutContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > h3 {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n  }\r\n  & > div {\r\n    align-self: center;\r\n    width: 80%;\r\n    height: 80%;\r\n    min-height: 300px;\r\n  }\r\n`;\r\n\r\nconst UsefulInformationRight = () => {\r\n  const contentInfo = useSelector((state) => state.leadEngineer.userInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLeadEngineerWorkPackagesStatus());\r\n  }, []);\r\n  return (\r\n    <StyledDoughnutContainer>\r\n      <h3>Status of own workpackages</h3>\r\n      <div>\r\n        <Doughnut\r\n          data={{\r\n            labels: [\"On time\", \"Stopped\", \"Deleyed\"],\r\n            datasets: [\r\n              {\r\n                data: contentInfo.statusOfWorkpackages,\r\n                backgroundColor: [\"green\", \"gray\", \"red\"],\r\n              },\r\n            ],\r\n          }}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n          options={{ maintainAspectRatio: false }}\r\n        ></Doughnut>\r\n      </div>\r\n    </StyledDoughnutContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationRight;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\reducers\\TechnicalProjectManagerReducers\\technicalProjectManagerReducer.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\TechnicalProjectManagerBoard.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\UserDetails\\UserDetails.js",["428","429"],"import { Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getTechnicalProjectManagerInfo } from \"../../../../../actions/TechnicalProjectManagerActions/boardActions\";\r\n\r\nconst StyledInfoColumn = styled(Grid)`\r\n  font-size: 20px;\r\n  & b {\r\n    color: #b0b0b0;\r\n    font-weight: bolder;\r\n  }\r\n`;\r\n\r\nconst StyledGenericAvatar = styled(Avatar)`\r\n  height: 100px;\r\n  width: 100px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst UserDetails = () => {\r\n  const contentInfo = useSelector(\r\n    (state) => state.technicalProjectManager.userInfo\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTechnicalProjectManagerInfo());\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={4} justify=\"space-between\">\r\n      <Grid item xs={4} md={1}>\r\n        {contentInfo.pictureUrl ? (\r\n          <img src={contentInfo.pictureUrl} alt=\"User\"></img>\r\n        ) : (\r\n          <StyledGenericAvatar variant=\"square\" />\r\n        )}\r\n      </Grid>\r\n      <Grid item container xs={8} md={11} justify=\"space-around\">\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          justify=\"flex-start\"\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Name:</b> {contentInfo.name}\r\n          </p>\r\n          <p>\r\n            <b>Surname:</b> {contentInfo.surname}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Joined at:</b> {contentInfo.joinedAt}\r\n          </p>\r\n          <p>\r\n            <b>Role:</b> {contentInfo.role}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Team:</b> {contentInfo.team}\r\n          </p>\r\n          <p>\r\n            <b>Supervisor:</b> {contentInfo.supervisor}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Finished workpackages:</b> {contentInfo.finishedWorkPackages}\r\n          </p>\r\n          <p>\r\n            <b>Unfinished workpackages: </b>\r\n            {contentInfo.unfinishedWorkPackages}\r\n          </p>\r\n        </StyledInfoColumn>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js",["430"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getTechnicalProjectManagerWorkpackages } from \"../../../../../../actions/TechnicalProjectManagerActions/boardActions\";\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 100%;\r\n\r\n  & > h3 {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledListOfTasks = styled.ul`\r\n  height: 400px;\r\n  overflow-y: scroll;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  & > li {\r\n    background-color: #414244;\r\n    color: white;\r\n    position: relative;\r\n    margin: 10px 0;\r\n    height: 200px;\r\n    list-style: none;\r\n    width: 100%;\r\n    font-weight: 700;\r\n\r\n    & > div {\r\n      position: absolute;\r\n      background-color: #bb432c;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p {\r\n      position: absolute;\r\n      padding: 10px;\r\n      width: 60%;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p:last-child {\r\n      text-align: end;\r\n      position: absolute;\r\n      right: 0;\r\n      padding: 10px;\r\n      width: 40%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UsefulInformationsLeft = () => {\r\n  const contentInfo = useSelector(\r\n    (state) => state.technicalProjectManager.userInfo\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTechnicalProjectManagerWorkpackages());\r\n  }, []);\r\n  return (\r\n    <StyledContainer>\r\n      <h3>Top5 work packages with closest deadline</h3>\r\n      <StyledListOfTasks>\r\n        {contentInfo.workPackages.map((workPackage) => (\r\n          <li>\r\n            <div style={{ width: `${workPackage.status * 100}%` }}></div>\r\n\r\n            <p>{workPackage.name}</p>\r\n            <p>\r\n              {`Due to: \r\n              ${workPackage.deadline}`}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </StyledListOfTasks>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationsLeft;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TechnicalProjectManager\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js",["431"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport { getTechnicalProjectManagerWorkPackagesStatus } from \"../../../../../../actions/TechnicalProjectManagerActions/boardActions\";\r\n\r\nconst StyledDoughnutContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > h3 {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n  }\r\n  & > div {\r\n    align-self: center;\r\n    width: 80%;\r\n    height: 80%;\r\n    min-height: 300px;\r\n  }\r\n`;\r\n\r\nconst UsefulInformationRight = () => {\r\n  const contentInfo = useSelector(\r\n    (state) => state.technicalProjectManager.userInfo\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTechnicalProjectManagerWorkPackagesStatus());\r\n  }, []);\r\n  return (\r\n    <StyledDoughnutContainer>\r\n      <h3>Status of own workpackages</h3>\r\n      <div>\r\n        <Doughnut\r\n          data={{\r\n            labels: [\"On time\", \"Stopped\", \"Deleyed\"],\r\n            datasets: [\r\n              {\r\n                data: contentInfo.statusOfWorkpackages,\r\n                backgroundColor: [\"green\", \"gray\", \"red\"],\r\n              },\r\n            ],\r\n          }}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n          options={{ maintainAspectRatio: false }}\r\n        ></Doughnut>\r\n      </div>\r\n    </StyledDoughnutContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationRight;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\TeamLeaderBoard.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\UserDetails\\UserDetails.js",["432","433"],"import { Avatar, Grid, Paper } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getTeamLeaderBoardInfo } from \"../../../../../actions/TeamLeaderActions/boardActions\";\r\n\r\nconst StyledInfoColumn = styled(Grid)`\r\n  font-size: 20px;\r\n  & b {\r\n    color: #b0b0b0;\r\n    font-weight: bolder;\r\n  }\r\n`;\r\n\r\nconst StyledGenericAvatar = styled(Avatar)`\r\n  height: 100px;\r\n  width: 100px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst UserDetails = () => {\r\n  const contentInfo = useSelector((state) => state.teamLeader.userInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTeamLeaderBoardInfo());\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={4} justify=\"space-between\">\r\n      <Grid item xs={4} md={1}>\r\n        {contentInfo.pictureUrl ? (\r\n          <img src={contentInfo.pictureUrl} alt=\"User\"></img>\r\n        ) : (\r\n          <StyledGenericAvatar variant=\"square\" />\r\n        )}\r\n      </Grid>\r\n      <Grid item container xs={8} md={11} justify=\"space-around\">\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          justify=\"flex-start\"\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Name:</b> {contentInfo.name}\r\n          </p>\r\n          <p>\r\n            <b>Surname:</b> {contentInfo.surname}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Joined at: </b> {contentInfo.joinedAt}\r\n          </p>\r\n          <p>\r\n            <b>Role:</b> {contentInfo.role}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Team: </b> {contentInfo.team}\r\n          </p>\r\n          <p>\r\n            <b>Supervisor: </b> {contentInfo.supervisor}\r\n          </p>\r\n        </StyledInfoColumn>\r\n        <StyledInfoColumn\r\n          item\r\n          container\r\n          justify=\"flex-start\"\r\n          xs={12}\r\n          sm={6}\r\n          xl={3}\r\n          direction=\"column\"\r\n        >\r\n          <p>\r\n            <b>Team members: </b> {contentInfo.teamMembersQuantity}\r\n          </p>\r\n          <p>\r\n            <b>Unfinished workpackages: </b>\r\n            {contentInfo.unfinishedWorkPackages}\r\n          </p>\r\n        </StyledInfoColumn>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\UsefulInformations\\UsefulInformationsLeft\\UsefulInformationsLeft.js",["434"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { getTeamLeaderWorkpackages } from \"../../../../../../actions/TeamLeaderActions/boardActions\";\r\n\r\nconst StyledContainer = styled.div`\r\n  width: 100%;\r\n\r\n  & > h3 {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledListOfTasks = styled.ul`\r\n  height: 400px;\r\n  overflow-y: scroll;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  & > li {\r\n    background-color: #414244;\r\n    color: white;\r\n    position: relative;\r\n    margin: 10px 0;\r\n    height: 200px;\r\n    list-style: none;\r\n    width: 100%;\r\n    font-weight: 700;\r\n\r\n    & > div {\r\n      position: absolute;\r\n      background-color: #bb432c;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p {\r\n      position: absolute;\r\n      padding: 10px;\r\n      width: 60%;\r\n      height: 100%;\r\n    }\r\n\r\n    & > p:last-child {\r\n      text-align: end;\r\n      position: absolute;\r\n      right: 0;\r\n      padding: 10px;\r\n      width: 40%;\r\n      height: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UsefulInformationsLeft = () => {\r\n  const contentInfo = useSelector((state) => state.teamLeader.userInfo);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTeamLeaderWorkpackages());\r\n  }, []);\r\n  return (\r\n    <StyledContainer>\r\n      <h3>Workpackages with upcoming deadline</h3>\r\n      <StyledListOfTasks>\r\n        {contentInfo?.workPackages?.map((workPackage) => (\r\n          <li>\r\n            <div style={{ width: `${workPackage.status * 100}%` }}></div>\r\n\r\n            <p>{workPackage.name}</p>\r\n            <p>\r\n              {`Due to: \r\n              ${workPackage.deadline}`}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </StyledListOfTasks>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationsLeft;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\components\\Roles\\TeamLeader\\Board\\UsefulInformations\\UsefulInformationsRight\\UsefulInformationRight.js",["435"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\nimport { getTeamLeaderAssignedHours } from \"../../../../../../actions/TeamLeaderActions/boardActions\";\r\nconst StyledDoughnutContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & > h3 {\r\n    margin-left: 10px;\r\n    padding: 10px;\r\n  }\r\n  & > div {\r\n    align-self: center;\r\n    width: 80%;\r\n    height: 80%;\r\n    min-height: 300px;\r\n  }\r\n`;\r\n\r\nconst UsefulInformationRight = () => {\r\n  const contentInfo = useSelector((state) => state.teamLeader.userInfo);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getTeamLeaderAssignedHours());\r\n  }, []);\r\n  return (\r\n    <StyledDoughnutContainer>\r\n      <h3>Assigned work for current week</h3>\r\n      <div>\r\n        <Doughnut\r\n          data={{\r\n            labels: [\"Assigned\", \"Unassigned\", \"Required\"],\r\n            datasets: [\r\n              {\r\n                data: contentInfo.statusOfWorkpackages,\r\n                backgroundColor: [\"green\", \"gray\", \"red\"],\r\n              },\r\n            ],\r\n          }}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n          options={{ maintainAspectRatio: false }}\r\n        ></Doughnut>\r\n      </div>\r\n    </StyledDoughnutContainer>\r\n  );\r\n};\r\n\r\nexport default UsefulInformationRight;\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\services\\auth.service.js",["436"],"import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/\";\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\auth.js",["437"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n  CLEAR_MESSAGE,\r\n} from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  return AuthService.login(username, password)\r\n    .then((data) => {\r\n      const { token } = data;\r\n      // store the token in the localStorage\r\n      const decodedToken = jwt_decode(token);\r\n      const user = { ...decodedToken, token };\r\n      console.log(user);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user },\r\n      });\r\n\r\n      dispatch({\r\n        type: CLEAR_MESSAGE,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n      if (error.response.status === 403) {\r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: \"Wrong username or password\",\r\n        });\r\n      }\r\n\r\n      return Promise.reject();\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\EngineerActions\\boardActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\services\\auth-header.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\LeadEngineerActions\\boardActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TechnicalProjectManagerActions\\boardActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\TeamLeaderActions\\boardActions.js",[],"C:\\Users\\Mateusz\\Desktop\\Ftrot2\\FTROT2-frontend\\ftrot2\\src\\actions\\AccountActions\\accountActions.js",[],{"ruleId":"438","replacedBy":"439"},{"ruleId":"440","replacedBy":"441"},{"ruleId":"442","severity":1,"message":"443","line":4,"column":20,"nodeType":"444","messageId":"445","endLine":4,"endColumn":26},{"ruleId":"446","severity":1,"message":"447","line":82,"column":6,"nodeType":"448","endLine":82,"endColumn":19,"suggestions":"449"},{"ruleId":"442","severity":1,"message":"450","line":4,"column":3,"nodeType":"444","messageId":"445","endLine":4,"endColumn":12},{"ruleId":"451","severity":1,"message":"452","line":5,"column":1,"nodeType":"453","endLine":18,"endColumn":2},{"ruleId":"451","severity":1,"message":"452","line":15,"column":1,"nodeType":"453","endLine":50,"endColumn":2},{"ruleId":"442","severity":1,"message":"454","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":14},{"ruleId":"442","severity":1,"message":"455","line":1,"column":10,"nodeType":"444","messageId":"445","endLine":1,"endColumn":14},{"ruleId":"442","severity":1,"message":"456","line":15,"column":7,"nodeType":"444","messageId":"445","endLine":15,"endColumn":15},{"ruleId":"442","severity":1,"message":"454","line":1,"column":8,"nodeType":"444","messageId":"445","endLine":1,"endColumn":14},{"ruleId":"442","severity":1,"message":"456","line":18,"column":7,"nodeType":"444","messageId":"445","endLine":18,"endColumn":15},{"ruleId":"442","severity":1,"message":"457","line":4,"column":3,"nodeType":"444","messageId":"445","endLine":4,"endColumn":14},{"ruleId":"442","severity":1,"message":"458","line":1,"column":10,"nodeType":"444","messageId":"445","endLine":1,"endColumn":16},{"ruleId":"442","severity":1,"message":"459","line":1,"column":24,"nodeType":"444","messageId":"445","endLine":1,"endColumn":29},{"ruleId":"442","severity":1,"message":"454","line":3,"column":8,"nodeType":"444","messageId":"445","endLine":3,"endColumn":14},{"ruleId":"442","severity":1,"message":"458","line":1,"column":10,"nodeType":"444","messageId":"445","endLine":1,"endColumn":16},{"ruleId":"442","severity":1,"message":"460","line":1,"column":25,"nodeType":"444","messageId":"445","endLine":1,"endColumn":34},{"ruleId":"442","severity":1,"message":"461","line":2,"column":17,"nodeType":"444","messageId":"445","endLine":2,"endColumn":23},{"ruleId":"442","severity":1,"message":"462","line":2,"column":25,"nodeType":"444","messageId":"445","endLine":2,"endColumn":33},{"ruleId":"442","severity":1,"message":"463","line":5,"column":18,"nodeType":"444","messageId":"445","endLine":5,"endColumn":27},{"ruleId":"442","severity":1,"message":"464","line":6,"column":8,"nodeType":"444","messageId":"445","endLine":6,"endColumn":13},{"ruleId":"442","severity":1,"message":"465","line":7,"column":8,"nodeType":"444","messageId":"445","endLine":7,"endColumn":18},{"ruleId":"442","severity":1,"message":"466","line":11,"column":7,"nodeType":"444","messageId":"445","endLine":11,"endColumn":18},{"ruleId":"446","severity":1,"message":"467","line":59,"column":6,"nodeType":"448","endLine":59,"endColumn":8,"suggestions":"468"},{"ruleId":"442","severity":1,"message":"469","line":72,"column":10,"nodeType":"444","messageId":"445","endLine":72,"endColumn":17},{"ruleId":"442","severity":1,"message":"470","line":72,"column":19,"nodeType":"444","messageId":"445","endLine":72,"endColumn":29},{"ruleId":"446","severity":1,"message":"467","line":79,"column":6,"nodeType":"448","endLine":79,"endColumn":8,"suggestions":"471"},{"ruleId":"442","severity":1,"message":"462","line":1,"column":28,"nodeType":"444","messageId":"445","endLine":1,"endColumn":36},{"ruleId":"446","severity":1,"message":"467","line":38,"column":6,"nodeType":"448","endLine":38,"endColumn":8,"suggestions":"472"},{"ruleId":"442","severity":1,"message":"455","line":3,"column":10,"nodeType":"444","messageId":"445","endLine":3,"endColumn":14},{"ruleId":"442","severity":1,"message":"473","line":26,"column":7,"nodeType":"444","messageId":"445","endLine":26,"endColumn":37},{"ruleId":"446","severity":1,"message":"467","line":55,"column":6,"nodeType":"448","endLine":55,"endColumn":8,"suggestions":"474"},{"ruleId":"442","severity":1,"message":"475","line":8,"column":3,"nodeType":"444","messageId":"445","endLine":8,"endColumn":19},{"ruleId":"442","severity":1,"message":"476","line":11,"column":3,"nodeType":"444","messageId":"445","endLine":11,"endColumn":21},{"ruleId":"442","severity":1,"message":"477","line":12,"column":3,"nodeType":"444","messageId":"445","endLine":12,"endColumn":26},{"ruleId":"446","severity":1,"message":"467","line":67,"column":6,"nodeType":"448","endLine":67,"endColumn":8,"suggestions":"478"},{"ruleId":"442","severity":1,"message":"479","line":1,"column":16,"nodeType":"444","messageId":"445","endLine":1,"endColumn":20},{"ruleId":"442","severity":1,"message":"480","line":5,"column":8,"nodeType":"444","messageId":"445","endLine":5,"endColumn":21},{"ruleId":"442","severity":1,"message":"475","line":8,"column":3,"nodeType":"444","messageId":"445","endLine":8,"endColumn":19},{"ruleId":"442","severity":1,"message":"462","line":11,"column":28,"nodeType":"444","messageId":"445","endLine":11,"endColumn":36},{"ruleId":"446","severity":1,"message":"467","line":65,"column":6,"nodeType":"448","endLine":65,"endColumn":8,"suggestions":"481"},{"ruleId":"438","replacedBy":"482"},{"ruleId":"440","replacedBy":"483"},{"ruleId":"442","severity":1,"message":"484","line":5,"column":7,"nodeType":"444","messageId":"445","endLine":5,"endColumn":23},{"ruleId":"442","severity":1,"message":"458","line":3,"column":3,"nodeType":"444","messageId":"445","endLine":3,"endColumn":9},{"ruleId":"442","severity":1,"message":"470","line":73,"column":19,"nodeType":"444","messageId":"445","endLine":73,"endColumn":29},{"ruleId":"446","severity":1,"message":"467","line":77,"column":6,"nodeType":"448","endLine":77,"endColumn":8,"suggestions":"485"},{"ruleId":"442","severity":1,"message":"469","line":28,"column":10,"nodeType":"444","messageId":"445","endLine":28,"endColumn":17},{"ruleId":"446","severity":1,"message":"467","line":37,"column":6,"nodeType":"448","endLine":37,"endColumn":8,"suggestions":"486"},{"ruleId":"442","severity":1,"message":"462","line":3,"column":17,"nodeType":"444","messageId":"445","endLine":3,"endColumn":25},{"ruleId":"442","severity":1,"message":"487","line":13,"column":16,"nodeType":"444","messageId":"445","endLine":13,"endColumn":26},{"ruleId":"442","severity":1,"message":"488","line":4,"column":8,"nodeType":"444","messageId":"445","endLine":4,"endColumn":20},{"ruleId":"442","severity":1,"message":"489","line":5,"column":3,"nodeType":"444","messageId":"445","endLine":5,"endColumn":10},{"ruleId":"442","severity":1,"message":"459","line":1,"column":42,"nodeType":"444","messageId":"445","endLine":1,"endColumn":47},{"ruleId":"442","severity":1,"message":"470","line":28,"column":19,"nodeType":"444","messageId":"445","endLine":28,"endColumn":29},{"ruleId":"446","severity":1,"message":"467","line":32,"column":6,"nodeType":"448","endLine":32,"endColumn":8,"suggestions":"490"},{"ruleId":"442","severity":1,"message":"491","line":22,"column":9,"nodeType":"444","messageId":"445","endLine":22,"endColumn":20},{"ruleId":"442","severity":1,"message":"479","line":5,"column":18,"nodeType":"444","messageId":"445","endLine":5,"endColumn":22},{"ruleId":"442","severity":1,"message":"459","line":1,"column":24,"nodeType":"444","messageId":"445","endLine":1,"endColumn":29},{"ruleId":"446","severity":1,"message":"467","line":27,"column":6,"nodeType":"448","endLine":27,"endColumn":8,"suggestions":"492"},{"ruleId":"446","severity":1,"message":"467","line":64,"column":6,"nodeType":"448","endLine":64,"endColumn":8,"suggestions":"493"},{"ruleId":"446","severity":1,"message":"467","line":32,"column":6,"nodeType":"448","endLine":32,"endColumn":8,"suggestions":"494"},{"ruleId":"442","severity":1,"message":"459","line":1,"column":24,"nodeType":"444","messageId":"445","endLine":1,"endColumn":29},{"ruleId":"446","severity":1,"message":"467","line":28,"column":6,"nodeType":"448","endLine":28,"endColumn":8,"suggestions":"495"},{"ruleId":"446","severity":1,"message":"467","line":66,"column":6,"nodeType":"448","endLine":66,"endColumn":8,"suggestions":"496"},{"ruleId":"446","severity":1,"message":"467","line":33,"column":6,"nodeType":"448","endLine":33,"endColumn":8,"suggestions":"497"},{"ruleId":"442","severity":1,"message":"459","line":1,"column":24,"nodeType":"444","messageId":"445","endLine":1,"endColumn":29},{"ruleId":"446","severity":1,"message":"467","line":27,"column":6,"nodeType":"448","endLine":27,"endColumn":8,"suggestions":"498"},{"ruleId":"446","severity":1,"message":"467","line":64,"column":6,"nodeType":"448","endLine":64,"endColumn":8,"suggestions":"499"},{"ruleId":"446","severity":1,"message":"467","line":30,"column":6,"nodeType":"448","endLine":30,"endColumn":8,"suggestions":"500"},{"ruleId":"451","severity":1,"message":"501","line":28,"column":1,"nodeType":"453","endLine":32,"endColumn":3},{"ruleId":"442","severity":1,"message":"502","line":71,"column":13,"nodeType":"444","messageId":"445","endLine":71,"endColumn":20},"no-native-reassign",["503"],"no-negated-in-lhs",["504"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["505"],"'GET_TASKS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'moment' is defined but never used.","'uuid' is defined but never used.","'userInfo' is assigned a value but never used.","'ASSIGN_TASK' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useFormik' is defined but never used.","'axios' is defined but never used.","'authHeader' is defined but never used.","'StyledImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["506"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["507"],["508"],"'StyledUnassignedTasksContainer' is assigned a value but never used.",["509"],"'TextareaAutosize' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.",["510"],"'Grid' is defined but never used.","'DialogActions' is defined but never used.",["511"],["503"],["504"],"'StyledTaskAction' is assigned a value but never used.",["512"],["513"],"'useHistory' is defined but never used.","'ListItemIcon' is defined but never used.","'Divider' is defined but never used.",["514"],"'contentInfo' is assigned a value but never used.",["515"],["516"],["517"],["518"],["519"],["520"],["521"],["522"],["523"],"Assign object to a variable before exporting as module default","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"526","fix":"528"},{"desc":"526","fix":"529"},{"desc":"526","fix":"530"},{"desc":"526","fix":"531"},{"desc":"526","fix":"532"},{"desc":"526","fix":"533"},{"desc":"526","fix":"534"},{"desc":"526","fix":"535"},{"desc":"526","fix":"536"},{"desc":"526","fix":"537"},{"desc":"526","fix":"538"},{"desc":"526","fix":"539"},{"desc":"526","fix":"540"},{"desc":"526","fix":"541"},{"desc":"526","fix":"542"},{"desc":"526","fix":"543"},{"desc":"526","fix":"544"},"Update the dependencies array to be: [currentUser, history]",{"range":"545","text":"546"},"Update the dependencies array to be: [dispatch]",{"range":"547","text":"548"},{"range":"549","text":"548"},{"range":"550","text":"548"},{"range":"551","text":"548"},{"range":"552","text":"548"},{"range":"553","text":"548"},{"range":"554","text":"548"},{"range":"555","text":"548"},{"range":"556","text":"548"},{"range":"557","text":"548"},{"range":"558","text":"548"},{"range":"559","text":"548"},{"range":"560","text":"548"},{"range":"561","text":"548"},{"range":"562","text":"548"},{"range":"563","text":"548"},{"range":"564","text":"548"},{"range":"565","text":"548"},[3653,3666],"[currentUser, history]",[1575,1577],"[dispatch]",[1793,1795],[1054,1056],[1459,1461],[1995,1997],[1996,1998],[1802,1804],[965,967],[854,856],[739,741],[1368,1370],[828,830],[791,793],[1422,1424],[880,882],[741,743],[1360,1362],[806,808]]